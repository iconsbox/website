{"version":3,"sources":["webpack:///./node_modules/recoil/es/recoil.js"],"names":["_marked","mark","concatIterables","_marked2","filterIterable","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","from","test","_unsupportedIterableToArray","length","i","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","_isNativeReflectConstruct","result","Super","NewTarget","this","Recoil_expectationViolation","format","Recoil_recoverableViolation","message","projectName","_ref2","undefined","error","_defineProperty","obj","configurable","writable","AbstractRecoilValue","newKey","RecoilState","_AbstractRecoilValue","_super","RecoilValueReadOnly","_AbstractRecoilValue2","_super2","Recoil_RecoilValue","isRecoilValue","x","Recoil_RecoilValue_1","Recoil_RecoilValue_2","Recoil_RecoilValue_3","Recoil_RecoilValue_4","Recoil_RecoilValue$1","freeze","__proto__","DefaultValue","DEFAULT_VALUE","RecoilValueNotReady","_Error","_super3","concat","Error","nodes","Map","recoilValues","NodeMissingError","_Error2","_super4","Recoil_Node","registerNode","node","has","set","recoilValue","getNode","get","getNodeMaybe","Recoil_Queue","enqueueExecution","Recoil_CopyOnWrite","v","Set","add","map","k","delete","ks","mapByDeletingFromMap$1","mapBySettingInMap$1","setByAddingToSet$1","getNode$1","getNodeMaybe$1","emptySet","ReadOnlyRecoilValueError","_Error3","_super5","Recoil_FunctionalCore","store","state","peek","newValue","_node$invalidate","invalidate","atomValues","nonvalidatedAtoms","dirtyAtoms","visitedNodes","visitingNodes","graph","getGraph","version","pop","_graph$nodeToNodeSubs","_step","_iterator","nodeToNodeSubscriptions","downstreamNode","Recoil_differenceSets","ret","_len3","setsWithValuesToRemove","_key3","_step2","_iterator2","FIRST","_step3","_iterator3","otherSet","Recoil_mapMap","callback","Recoil_nullthrows","mergeDependencyMapIntoGraph","deps","olderGraph","nodeDeps","upstreams","downstream","existingUpstreams","upstream","existing","size","Recoil_Graph","dependencyMap","into","upstreamDeps","dep","_storeState$nextTree","_storeState$previousT","_storeState$previousT2","_storeState$previousT3","storeState","getState","currentTree","nextTree","previousTree","_storeState$nextTree2","nextVersion","Recoil_Tracing","trace","fn","wrap","Recoil_unionSets","_len4","sets","_key4","_i","_sets","_step4","_iterator4","mapByDeletingFromMap$2","mapByDeletingMultipleFromMap$1","getNodeLoadable$1","setNodeValue$1","setUnvalidatedAtomValue$1","saveDependencyMapToStore$1","DefaultValue$1","RecoilValueNotReady$1","AbstractRecoilValue$1","RecoilState$1","RecoilValueReadOnly$1","isRecoilValue$1","applyAtomValueWrites","writes","contents","setRecoilValue","valueOrUpdater","replaceState","_ref4","current","valueFromValueOrUpdater","_setNodeValue$","_setNodeValue$2","depMap","writtenNodes","subscriptionID","Recoil_RecoilValueInterface","getRecoilValueAsLoadable","_ref3","treeState","_getNodeLoadable$","_getNodeLoadable$2","loadable","setRecoilValueLoadable","writtenNode","markRecoilValueModified","_ref5","setUnvalidatedRecoilValue","_ref6","subscribeToRecoilValue","_ref7","subID","nodeToComponentSubscriptions","release","subs","iters","_iterator5","_step5","iter","_iterator6","_step6","val","_context","prev","t0","finish","t1","stop","Recoil_concatIterables","iterable","predicate","index","_iterator7","_step7","_context2","Recoil_filterIterable","gks","Recoil_gkx","gk","_gks$get","setPass","setFail","Recoil_gkx_1","Recoil_mapIterable","_callee","_iterator8","_step8","_context3","graph$1","nextTreeStateVersion","getNextTreeStateVersion","makeEmptyTreeState","stateID","transactionMetadata","Recoil_State","knownAtoms","knownSelectors","transactionSubscriptions","nodeTransactionSubscriptions","queuedComponentCallbacks_DEPRECATED","suspendedComponentResolvers","graphsByVersion","versionsUsedByComponent","getDownstreamNodes$1","peekNodeLoadable$1","graph$2","DEFAULT_VALUE$1","recoilValues$1","getRecoilValueAsLoadable$1","setRecoilValue$1","getNextTreeStateVersion$1","makeEmptyStoreState$1","recoilValuesForKeys","Snapshot","_this","_store","getLoadable","toPromise","then","_ref8","opt","isModified","isInitialized","values","_ref9","_ref10","nodeKey","_graph$nodeDeps$get","isActive","isSet","type","subscribers","getSubscribers_UNSTABLE","mapper","mutableSnapshot","MutableSnapshot","cloneSnapshot","getStore_INTERNAL","_ref11","_callee2","_context4","abrupt","_x","replacer","graphs","newGraph","subscribeToTransactions","addTransactionMetadata","getID_INTERNAL","cloneStoreState","bumpVersion","_Snapshot","_super6","snapshot","_this2","recoilState","newValueOrUpdater","Recoil_Snapshot","freshSnapshot","Recoil_Snapshot_1","Recoil_Snapshot_2","Recoil_Snapshot_3","Recoil_Snapshot_4","Recoil_Snapshot$1","useContext","useEffect","useMemo","useRef","useState","getDownstreamNodes$2","setNodeValue$2","setUnvalidatedAtomValue$2","graph$3","saveDependencyMapToStore$2","cloneGraph$1","applyAtomValueWrites$1","freshSnapshot$1","getNextTreeStateVersion$2","makeEmptyStoreState$2","mapByDeletingMultipleFromMap$2","notInAContext","defaultStore","stateReplacerIsBeingExecuted","startNextTreeIfNeeded","AppContext","createContext","useStoreRef","MutableSourceContext","sendEndOfBatchNotifications","_step9","_iterator9","_step9$value","subscriptions","_step12","_iterator12","_step12$value","subscription","_step10","_iterator10","_step10$value","_subscription","_step11","_iterator11","_key5","comps","_step13","_iterator13","_step13$value","_step13$value$","cb","splice","Batcher","props","storeRef","_useState","_useState2","setState","setNotifyBatcherOfChange","discardedVersion","nextID","Recoil_RecoilRoot_react","_ref12","_createMutableSource","initializeState_DEPRECATED","initializeState","storeProp","store_INTERNAL","children","notifyBatcherOfChange","createMutableSource","unstable_createMutableSource","replaced","id","_id2","metadata","_i2","_Object$keys","initial","atom","_setNodeValue$3","_setNodeValue$4","setUnvalidatedAtomValues","initialStoreState_DEPRECATED","initialStoreState","mutableSource","createElement","Provider","Recoil_filterMap","_step14","_iterator14","_step14$value","Recoil_filterSet","_step15","_iterator15","Recoil_invariant","condition","_useMutableSource","Recoil_mergeMaps","_len5","maps","_key6","nextKey","useCallback","useEffect$1","useState$1","DEFAULT_VALUE$2","getNode$2","nodes$1","useRecoilMutableSource$1","useStoreRef$1","AbstractRecoilValue$2","getRecoilValueAsLoadable$2","setRecoilValue$2","setRecoilValueLoadable$1","setUnvalidatedRecoilValue$1","subscribeToRecoilValue$1","cloneSnapshot$1","handleLoadable","Promise","resolve","useMutableSource","unstable_useMutableSource","useRecoilValueLoadable","window","$disableRecoilValueMutableSource_TEMP_HACK_DO_NOT_USE","_useState$3","_useState$4","forceUpdate","sub","_state","useRecoilValueLoadable_LEGACY","getValue","subscribe","_something","useRecoilValueLoadable_MUTABLESOURCE","useRecoilValue","useSetRecoilState","useTransactionSubscription","externallyVisibleAtomValuesInState","persistedAtomContentsValues","persistence","persistence_UNSTABLE","useGotoRecoilSnapshot","unstable_batchedUpdates","keysToUpdate","_i3","_arr","_step16","_iterator16","_prev$atomValues$get","_next$atomValues$get","shouldRestoreFromSnapshots","Sentinel","SENTINEL","Recoil_Hooks","gotoSnapshot","_len6","args","_key7","reset","_useState$5","_useState$6","setSnapshot","previousSnapshot","previousAtomValues","atomInfo","_node$persistence_UNS","_node$persistence_UNS2","_node$persistence_UNS3","_node$persistence_UNS4","backButton","modifiedAtoms","useMemo$2","RecoilRoot$1","useStoreRef$2","Recoil_useRecoilBridgeAcrossReactRoots","_ref13","Recoil_isPromise","p","loadableAccessors","reject","valueMaybe","valueOrThrow","errorMaybe","errorOrThrow","promiseMaybe","promiseOrThrow","_map","_this3","loadableWithPromise","loadableWithValue","loadableWithError","catch","promise","Recoil_Loadable","LEAF","emptyMap","Recoil_ArrayKeyedMap","ArrayKeyedMap","_base","_step17","_iterator17","entries","_step17$value","_step18","_iterator18","_step18$value","_k","_v","_map$get","answer","recurse","level","prefix","Recoil_cacheWithReferenceEquality","Recoil_PerformanceTimings","_id","loadableWithError$1","loadableWithPromise$1","loadableWithValue$1","getNodeLoadable$2","peekNodeLoadable$2","setNodeValue$3","addToDependencyMap$1","mergeDepsIntoDependencyMap$1","saveDependencyMapToStore$3","DEFAULT_VALUE$3","RecoilValueNotReady$2","registerNode$1","AbstractRecoilValue$3","getRecoilValueAsLoadable$3","isRecoilValue$3","setRecoilValueLoadable$2","startPerfBlock$1","emptySet$1","cacheKeyFromDepValues","depValues","_step19","_iterator19","sort","waitingStores","Recoil_selector","options","cacheImplementation","cacheImplementation_UNSTABLE","cache","initSelector","letStoreBeNotifiedWhenAsyncSettles","stores","notifyStoresOfSettledAsync","originalLoadable","newLoadable","_step20","_iterator20","getFromCacheOrEvaluate","_store$getGraph$nodeD","currentDeps","cacheKey","depKey","_getNodeLoadable$3","_getNodeLoadable$4","cached","_evaluateSelectorFunc","endPerfBlock","getRecoilValue","_ref14","_getNodeLoadable$5","_getNodeLoadable$6","output","finally","errorOrDepPromise","_loadable","evaluateSelectorFunction","_evaluateSelectorFunc2","newDepValues","newCacheKey","putIntoCache","myPeek","_store$getGraph$nodeD2","_step21","cacheDepValues","_iterator21","_step21$value","depValue","myGet","_ref15","_getNodeLoadable$7","_getNodeLoadable$8","setRecoilState","_setNodeValue$5","_setNodeValue$6","upstreamWrites","dangerouslyAllowMutability","loadableWithError$2","loadableWithPromise$2","loadableWithValue$2","DEFAULT_VALUE$4","DefaultValue$2","registerNode$2","isRecoilValue$4","markRecoilValueModified$1","setRecoilValue$3","setRecoilValueLoadable$3","baseAtom","defaultLoadable","default","cachedAnswerForUnvalidatedValue","initAtom","initState","trigger","notifyDefaultSubscribers","_store$getState$nextT3","initValue","effects_UNSTABLE","duringInit","setSelf","currentValue","resetSelf","onSet","handler","currentStore","_currentStore$getStat","_previousTree$atomVal","oldLoadable","oldValue","_step22","_iterator22","_options$effects_UNST","effect","wrappedPromise","_store$getState$nextT","_state$atomValues$get","_store$getState$nextT2","_state$atomValues$get2","wrapPendingPromise","_ref","_state$atomValues$get3","_cachedAnswerForUnval","nonvalidatedValue","validatorResult","validator","validatedValueLoadable","optionsDefault","restOptions","base","storedValue","_ref16","baseValue","_get","_ref17","_set","atomWithFallback","Recoil_atom","stringify","includes","String","JSON","allowFunctions","_JSON$stringify","toJSON","_step23","_iterator23","_step23$value","a","b","localeCompare","join","Recoil_stableStringify","Recoil_cacheWithValueEquality","nextIndex","Recoil_selectorFamily","_options$cacheImpleme","_options$cacheImpleme2","selectorCache","cacheImplementationForParams_UNSTABLE","params","_stableStringify","_options$cacheImpleme3","cachedSelector","newSelector","myKey","callbacks","myCacheImplementation","DEFAULT_VALUE$5","DefaultValue$3","Recoil_atomFamily","legacyAtom","atomCache","legacyAtomOptions","atomFamilyDefault","param","_ref18","legacyValue","cachedAtom","newAtom","constantSelector","constant","Recoil_constSelector","throwingSelector","Recoil_errorSelector","Recoil_readOnlySelector","loadableWithError$3","loadableWithPromise$3","loadableWithValue$3","concurrentRequests","_step24","results","fill","exceptions","_iterator24","_step24$value","isError","exp","unwrapDependencies","dependencies","getOwnPropertyNames","getValueFromLoadablePromiseResult","hasOwnProperty","wrapResults","reduce","out","idx","wrapLoadables","exception","Recoil_WaitFor","waitForNone","_ref19","_concurrentRequests","_concurrentRequests2","waitForAny","_ref20","_concurrentRequests3","_concurrentRequests4","some","every","find","_step25","_iterator25","_loop","_step25$value","_step26","_iterator26","_loop2","_step26$value","waitForAll","_ref21","_concurrentRequests5","_concurrentRequests6","all","noWait","dependency","_ref22","DefaultValue$4","RecoilRoot$2","isRecoilValue$5","Recoil_index","RecoilRoot","useRecoilBridgeAcrossReactRoots_UNSTABLE","selector","atomFamily","selectorFamily","constSelector","errorSelector","readOnlySelector","useRecoilState","useRecoilStateLoadable","useResetRecoilState","useRecoilCallback","useRecoilSnapshot","useRecoilTransactionObserver_UNSTABLE","useTransactionObservation_UNSTABLE","useSetUnvalidatedAtomValues_UNSTABLE","Recoil_index_2","Recoil_index_4","Recoil_index_11","Recoil_index_15"],"mappings":"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","file":"0a301732-12290596e891f8753c21.js","sourcesContent":["import \"core-js/modules/es.promise.finally\";\nimport _objectWithoutProperties from \"/home/travis/build/iconsbox/website/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"/home/travis/build/iconsbox/website/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _assertThisInitialized from \"/home/travis/build/iconsbox/website/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _asyncToGenerator from \"/home/travis/build/iconsbox/website/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createClass from \"/home/travis/build/iconsbox/website/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _regeneratorRuntime from \"/home/travis/build/iconsbox/website/node_modules/@babel/runtime/regenerator\";\nimport \"regenerator-runtime/runtime\";\nimport _slicedToArray from \"/home/travis/build/iconsbox/website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty2 from \"/home/travis/build/iconsbox/website/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _wrapNativeSuper from \"/home/travis/build/iconsbox/website/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport _inherits from \"/home/travis/build/iconsbox/website/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/travis/build/iconsbox/website/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/travis/build/iconsbox/website/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/home/travis/build/iconsbox/website/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(concatIterables),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(filterIterable);\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty2(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport react from 'react';\nimport reactDom from 'react-dom';\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction sprintf(format) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var index = 0;\n  return format.replace(/%s/g, function () {\n    return String(args[index++]);\n  });\n}\n\nvar sprintf_1 = sprintf;\n\nfunction expectationViolation(format) {\n  if (process.env.NODE_ENV !== \"production\") {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    var message = sprintf_1.call.apply(sprintf_1, [null, format].concat(args));\n    var error = new Error(message);\n    error.name = 'Expectation Violation';\n    console.error(error);\n  }\n}\n\nvar expectationViolation_1 = expectationViolation; // @oss-only\n\nvar Recoil_expectationViolation = expectationViolation_1;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction recoverableViolation(message, projectName) {\n  var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      error = _ref2.error;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(message, error);\n  }\n\n  return null;\n}\n\nvar recoverableViolation_1 = recoverableViolation; // @oss-only\n\nvar Recoil_recoverableViolation = recoverableViolation_1;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n// eslint-disable-next-line no-unused-vars\n\n\nvar AbstractRecoilValue = function AbstractRecoilValue(newKey) {\n  _classCallCheck(this, AbstractRecoilValue);\n\n  _defineProperty(this, \"key\", void 0);\n\n  this.key = newKey;\n};\n\nvar RecoilState = /*#__PURE__*/function (_AbstractRecoilValue) {\n  _inherits(RecoilState, _AbstractRecoilValue);\n\n  var _super = _createSuper(RecoilState);\n\n  function RecoilState() {\n    _classCallCheck(this, RecoilState);\n\n    return _super.apply(this, arguments);\n  }\n\n  return RecoilState;\n}(AbstractRecoilValue);\n\nvar RecoilValueReadOnly = /*#__PURE__*/function (_AbstractRecoilValue2) {\n  _inherits(RecoilValueReadOnly, _AbstractRecoilValue2);\n\n  var _super2 = _createSuper(RecoilValueReadOnly);\n\n  function RecoilValueReadOnly() {\n    _classCallCheck(this, RecoilValueReadOnly);\n\n    return _super2.apply(this, arguments);\n  }\n\n  return RecoilValueReadOnly;\n}(AbstractRecoilValue);\n\nfunction isRecoilValue(x) {\n  return x instanceof RecoilState || x instanceof RecoilValueReadOnly;\n}\n\nvar Recoil_RecoilValue = {\n  AbstractRecoilValue: AbstractRecoilValue,\n  RecoilState: RecoilState,\n  RecoilValueReadOnly: RecoilValueReadOnly,\n  isRecoilValue: isRecoilValue\n};\nvar Recoil_RecoilValue_1 = Recoil_RecoilValue.AbstractRecoilValue;\nvar Recoil_RecoilValue_2 = Recoil_RecoilValue.RecoilState;\nvar Recoil_RecoilValue_3 = Recoil_RecoilValue.RecoilValueReadOnly;\nvar Recoil_RecoilValue_4 = Recoil_RecoilValue.isRecoilValue;\nvar Recoil_RecoilValue$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AbstractRecoilValue: Recoil_RecoilValue_1,\n  RecoilState: Recoil_RecoilValue_2,\n  RecoilValueReadOnly: Recoil_RecoilValue_3,\n  isRecoilValue: Recoil_RecoilValue_4\n});\n\nvar DefaultValue = function DefaultValue() {\n  _classCallCheck(this, DefaultValue);\n};\n\nvar DEFAULT_VALUE = new DefaultValue();\n\nvar RecoilValueNotReady = /*#__PURE__*/function (_Error) {\n  _inherits(RecoilValueNotReady, _Error);\n\n  var _super3 = _createSuper(RecoilValueNotReady);\n\n  function RecoilValueNotReady(key) {\n    _classCallCheck(this, RecoilValueNotReady);\n\n    return _super3.call(this, \"Tried to set the value of Recoil selector \".concat(key, \" using an updater function, but it is an async selector in a pending or error state; this is not supported.\"));\n  }\n\n  return RecoilValueNotReady;\n}( /*#__PURE__*/_wrapNativeSuper(Error)); // flowlint-next-line unclear-type:off\n\n\nvar nodes = new Map(); // flowlint-next-line unclear-type:off\n\nvar recoilValues = new Map();\n/* eslint-disable no-redeclare */\n\nfunction registerNode(node) {\n  if (nodes.has(node.key)) {\n    var message = \"Duplicate atom key \\\"\".concat(node.key, \"\\\". This is a FATAL ERROR in\\n      production. But it is safe to ignore this warning if it occurred because of\\n      hot module replacement.\"); // TODO Need to figure out if there is a standard/open-source equivalent to see if hot module replacement is happening:\n    // prettier-ignore\n    // @fb-only: if (__DEV__) {\n    // @fb-only: const isAcceptingUpdate = require('__debug').isAcceptingUpdate;\n    // prettier-ignore\n    // @fb-only: if (typeof isAcceptingUpdate !== 'function' || !isAcceptingUpdate()) {\n    // @fb-only: expectationViolation(message, 'recoil');\n    // @fb-only: }\n    // prettier-ignore\n    // @fb-only: } else {\n\n    Recoil_recoverableViolation(message); // @fb-only: }\n  }\n\n  nodes.set(node.key, node);\n  var recoilValue = node.set == null ? new Recoil_RecoilValue$1.RecoilValueReadOnly(node.key) : new Recoil_RecoilValue$1.RecoilState(node.key);\n  recoilValues.set(node.key, recoilValue);\n  return recoilValue;\n}\n/* eslint-enable no-redeclare */\n\n\nvar NodeMissingError = /*#__PURE__*/function (_Error2) {\n  _inherits(NodeMissingError, _Error2);\n\n  var _super4 = _createSuper(NodeMissingError);\n\n  function NodeMissingError() {\n    _classCallCheck(this, NodeMissingError);\n\n    return _super4.apply(this, arguments);\n  }\n\n  return NodeMissingError;\n}( /*#__PURE__*/_wrapNativeSuper(Error)); // flowlint-next-line unclear-type:off\n\n\nfunction getNode(key) {\n  var node = nodes.get(key);\n\n  if (node == null) {\n    throw new NodeMissingError(\"Missing definition for RecoilValue: \\\"\".concat(key, \"\\\"\\\"\"));\n  }\n\n  return node;\n} // flowlint-next-line unclear-type:off\n\n\nfunction getNodeMaybe(key) {\n  return nodes.get(key);\n}\n\nvar Recoil_Node = {\n  nodes: nodes,\n  recoilValues: recoilValues,\n  registerNode: registerNode,\n  getNode: getNode,\n  getNodeMaybe: getNodeMaybe,\n  NodeMissingError: NodeMissingError,\n  DefaultValue: DefaultValue,\n  DEFAULT_VALUE: DEFAULT_VALUE,\n  RecoilValueNotReady: RecoilValueNotReady\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction enqueueExecution(s, f) {\n  f();\n}\n\nvar Recoil_Queue = {\n  enqueueExecution: enqueueExecution\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Utilities for working with built-in Maps and Sets without mutating them.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction setByAddingToSet(set, v) {\n  var next = new Set(set);\n  next.add(v);\n  return next;\n}\n\nfunction setByDeletingFromSet(set, v) {\n  var next = new Set(set);\n  next.delete(v);\n  return next;\n}\n\nfunction mapBySettingInMap(map, k, v) {\n  var next = new Map(map);\n  next.set(k, v);\n  return next;\n}\n\nfunction mapByUpdatingInMap(map, k, updater) {\n  var next = new Map(map);\n  next.set(k, updater(next.get(k)));\n  return next;\n}\n\nfunction mapByDeletingFromMap(map, k) {\n  var next = new Map(map);\n  next.delete(k);\n  return next;\n}\n\nfunction mapByDeletingMultipleFromMap(map, ks) {\n  var next = new Map(map);\n  ks.forEach(function (k) {\n    return next.delete(k);\n  });\n  return next;\n}\n\nvar Recoil_CopyOnWrite = {\n  setByAddingToSet: setByAddingToSet,\n  setByDeletingFromSet: setByDeletingFromSet,\n  mapBySettingInMap: mapBySettingInMap,\n  mapByUpdatingInMap: mapByUpdatingInMap,\n  mapByDeletingFromMap: mapByDeletingFromMap,\n  mapByDeletingMultipleFromMap: mapByDeletingMultipleFromMap\n};\nvar mapByDeletingFromMap$1 = Recoil_CopyOnWrite.mapByDeletingFromMap,\n    mapBySettingInMap$1 = Recoil_CopyOnWrite.mapBySettingInMap,\n    setByAddingToSet$1 = Recoil_CopyOnWrite.setByAddingToSet;\nvar getNode$1 = Recoil_Node.getNode,\n    getNodeMaybe$1 = Recoil_Node.getNodeMaybe; // flowlint-next-line unclear-type:off\n\nvar emptySet = Object.freeze(new Set());\n\nvar ReadOnlyRecoilValueError = /*#__PURE__*/function (_Error3) {\n  _inherits(ReadOnlyRecoilValueError, _Error3);\n\n  var _super5 = _createSuper(ReadOnlyRecoilValueError);\n\n  function ReadOnlyRecoilValueError() {\n    _classCallCheck(this, ReadOnlyRecoilValueError);\n\n    return _super5.apply(this, arguments);\n  }\n\n  return ReadOnlyRecoilValueError;\n}( /*#__PURE__*/_wrapNativeSuper(Error)); // Get the current value loadable of a node and update the state.\n// Update dependencies and subscriptions for selectors.\n// Update saved value validation for atoms.\n\n\nfunction getNodeLoadable(store, state, key) {\n  return getNode$1(key).get(store, state);\n} // Peek at the current value loadable for a node without any evaluation or state change\n\n\nfunction peekNodeLoadable(store, state, key) {\n  return getNode$1(key).peek(store, state);\n} // Write value directly to state bypassing the Node interface as the node\n// definitions may not have been loaded yet when processing the initial snapshot.\n\n\nfunction setUnvalidatedAtomValue(state, key, newValue) {\n  var _node$invalidate;\n\n  var node = getNodeMaybe$1(key);\n  node === null || node === void 0 ? void 0 : (_node$invalidate = node.invalidate) === null || _node$invalidate === void 0 ? void 0 : _node$invalidate.call(node);\n  return _objectSpread(_objectSpread({}, state), {}, {\n    atomValues: mapByDeletingFromMap$1(state.atomValues, key),\n    nonvalidatedAtoms: mapBySettingInMap$1(state.nonvalidatedAtoms, key, newValue),\n    dirtyAtoms: setByAddingToSet$1(state.dirtyAtoms, key)\n  });\n} // Return the discovered dependencies and values to be written by setting\n// a node value. (Multiple values may be written due to selectors getting to\n// set upstreams; deps may be discovered because of reads in updater functions.)\n\n\nfunction setNodeValue(store, state, key, newValue) {\n  var node = getNode$1(key);\n\n  if (node.set == null) {\n    throw new ReadOnlyRecoilValueError(\"Attempt to set read-only RecoilValue: \".concat(key));\n  }\n\n  return node.set(store, state, newValue);\n} // Find all of the recursively dependent nodes\n\n\nfunction getDownstreamNodes(store, state, keys) {\n  var visitedNodes = new Set();\n  var visitingNodes = Array.from(keys);\n  var graph = store.getGraph(state.version);\n\n  for (var key = visitingNodes.pop(); key; key = visitingNodes.pop()) {\n    var _graph$nodeToNodeSubs;\n\n    visitedNodes.add(key);\n    var subscribedNodes = (_graph$nodeToNodeSubs = graph.nodeToNodeSubscriptions.get(key)) !== null && _graph$nodeToNodeSubs !== void 0 ? _graph$nodeToNodeSubs : emptySet;\n\n    var _iterator = _createForOfIteratorHelper(subscribedNodes),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var downstreamNode = _step.value;\n\n        if (!visitedNodes.has(downstreamNode)) {\n          visitingNodes.push(downstreamNode);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return visitedNodes;\n}\n\nvar Recoil_FunctionalCore = {\n  getNodeLoadable: getNodeLoadable,\n  peekNodeLoadable: peekNodeLoadable,\n  setNodeValue: setNodeValue,\n  setUnvalidatedAtomValue: setUnvalidatedAtomValue,\n  getDownstreamNodes: getDownstreamNodes\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n/**\n * Returns a set containing all of the values from the first set that are not\n * present in any of the subsequent sets.\n *\n * Note: this is written procedurally (i.e., without filterSet) for performant\n * use in tight loops.\n */\n\nfunction differenceSets(set) {\n  var ret = new Set();\n\n  for (var _len3 = arguments.length, setsWithValuesToRemove = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    setsWithValuesToRemove[_key3 - 1] = arguments[_key3];\n  }\n\n  var _iterator2 = _createForOfIteratorHelper(set),\n      _step2;\n\n  try {\n    FIRST: for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var value = _step2.value;\n\n      var _iterator3 = _createForOfIteratorHelper(setsWithValuesToRemove),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var otherSet = _step3.value;\n\n          if (otherSet.has(value)) {\n            continue FIRST;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      ret.add(value);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return ret;\n}\n\nvar Recoil_differenceSets = differenceSets;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n/**\n * Returns a new Map object with the same keys as the original, but with the\n * values replaced with the output of the given callback function.\n */\n\nfunction mapMap(map, callback) {\n  var result = new Map();\n  map.forEach(function (value, key) {\n    result.set(key, callback(value, key));\n  });\n  return result;\n}\n\nvar Recoil_mapMap = mapMap;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction nullthrows(x, message) {\n  if (x != null) {\n    return x;\n  }\n\n  throw new Error(message !== null && message !== void 0 ? message : 'Got unexpected null or undefined');\n}\n\nvar Recoil_nullthrows = nullthrows;\n\nfunction graph() {\n  return {\n    nodeDeps: new Map(),\n    nodeToNodeSubscriptions: new Map()\n  };\n}\n\nfunction cloneGraph(graph) {\n  return {\n    nodeDeps: Recoil_mapMap(graph.nodeDeps, function (s) {\n      return new Set(s);\n    }),\n    nodeToNodeSubscriptions: Recoil_mapMap(graph.nodeToNodeSubscriptions, function (s) {\n      return new Set(s);\n    })\n  };\n} // Note that this overwrites the deps of existing nodes, rather than unioning\n// the new deps with the old deps.\n\n\nfunction mergeDependencyMapIntoGraph(deps, graph, // If olderGraph is given then we will not overwrite changes made to the given\n// graph compared with olderGraph:\nolderGraph) {\n  var nodeDeps = graph.nodeDeps,\n      nodeToNodeSubscriptions = graph.nodeToNodeSubscriptions;\n  deps.forEach(function (upstreams, downstream) {\n    var existingUpstreams = nodeDeps.get(downstream);\n\n    if (existingUpstreams && olderGraph && existingUpstreams !== olderGraph.nodeDeps.get(downstream)) {\n      return;\n    } // Update nodeDeps:\n\n\n    nodeDeps.set(downstream, new Set(upstreams)); // Add new deps to nodeToNodeSubscriptions:\n\n    var addedUpstreams = existingUpstreams == null ? upstreams : Recoil_differenceSets(upstreams, existingUpstreams);\n    addedUpstreams.forEach(function (upstream) {\n      if (!nodeToNodeSubscriptions.has(upstream)) {\n        nodeToNodeSubscriptions.set(upstream, new Set());\n      }\n\n      var existing = Recoil_nullthrows(nodeToNodeSubscriptions.get(upstream));\n      existing.add(downstream);\n    }); // Remove removed deps from nodeToNodeSubscriptions:\n\n    if (existingUpstreams) {\n      var removedUpstreams = Recoil_differenceSets(existingUpstreams, upstreams);\n      removedUpstreams.forEach(function (upstream) {\n        if (!nodeToNodeSubscriptions.has(upstream)) {\n          return;\n        }\n\n        var existing = Recoil_nullthrows(nodeToNodeSubscriptions.get(upstream));\n        existing.delete(downstream);\n\n        if (existing.size === 0) {\n          nodeToNodeSubscriptions.delete(upstream);\n        }\n      });\n    }\n  });\n}\n\nfunction saveDependencyMapToStore(dependencyMap, store, version) {\n  var _storeState$nextTree, _storeState$previousT, _storeState$previousT2, _storeState$previousT3;\n\n  var storeState = store.getState();\n\n  if (!(version === storeState.currentTree.version || version === ((_storeState$nextTree = storeState.nextTree) === null || _storeState$nextTree === void 0 ? void 0 : _storeState$nextTree.version) || version === ((_storeState$previousT = storeState.previousTree) === null || _storeState$previousT === void 0 ? void 0 : _storeState$previousT.version))) {\n    Recoil_recoverableViolation('Tried to save dependencies to a discarded tree');\n  } // Merge the dependencies discovered into the store's dependency map\n  // for the version that was read:\n\n\n  var graph = store.getGraph(version);\n  mergeDependencyMapIntoGraph(dependencyMap, graph); // If this version is not the latest version, also write these dependencies\n  // into later versions if they don't already have their own:\n\n  if (version === ((_storeState$previousT2 = storeState.previousTree) === null || _storeState$previousT2 === void 0 ? void 0 : _storeState$previousT2.version)) {\n    var currentGraph = store.getGraph(storeState.currentTree.version);\n    mergeDependencyMapIntoGraph(dependencyMap, currentGraph, graph);\n  }\n\n  if (version === ((_storeState$previousT3 = storeState.previousTree) === null || _storeState$previousT3 === void 0 ? void 0 : _storeState$previousT3.version) || version === storeState.currentTree.version) {\n    var _storeState$nextTree2;\n\n    var nextVersion = (_storeState$nextTree2 = storeState.nextTree) === null || _storeState$nextTree2 === void 0 ? void 0 : _storeState$nextTree2.version;\n\n    if (nextVersion !== undefined) {\n      var nextGraph = store.getGraph(nextVersion);\n      mergeDependencyMapIntoGraph(dependencyMap, nextGraph, graph);\n    }\n  }\n}\n\nfunction mergeDepsIntoDependencyMap(from, into) {\n  from.forEach(function (upstreamDeps, downstreamNode) {\n    if (!into.has(downstreamNode)) {\n      into.set(downstreamNode, new Set());\n    }\n\n    var deps = Recoil_nullthrows(into.get(downstreamNode));\n    upstreamDeps.forEach(function (dep) {\n      return deps.add(dep);\n    });\n  });\n}\n\nfunction addToDependencyMap(downstream, upstream, dependencyMap) {\n  if (!dependencyMap.has(downstream)) {\n    dependencyMap.set(downstream, new Set());\n  }\n\n  Recoil_nullthrows(dependencyMap.get(downstream)).add(upstream);\n}\n\nvar Recoil_Graph = {\n  addToDependencyMap: addToDependencyMap,\n  cloneGraph: cloneGraph,\n  graph: graph,\n  mergeDepsIntoDependencyMap: mergeDepsIntoDependencyMap,\n  saveDependencyMapToStore: saveDependencyMapToStore\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Interface for `scheduler/tracing` to aid in profiling Recoil and Recoil apps.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n// flowlint-next-line untyped-import:off\n// @fb-only: const SchedulerTracing = require('SchedulerTracing');\n\nfunction trace(message, node, fn) {\n  // prettier-ignore\n  // @fb-only: if (__DEV__) {\n  // prettier-ignore\n  // @fb-only: if (\n  // prettier-ignore\n  // @fb-only: SchedulerTracing.unstable_trace !== undefined &&\n  // prettier-ignore\n  // @fb-only: window.performance !== undefined\n  // prettier-ignore\n  // @fb-only: ) {\n  // prettier-ignore\n  // @fb-only: return SchedulerTracing.unstable_trace(\n  // prettier-ignore\n  // @fb-only: `Recoil: ${message} for node: ${\n  // prettier-ignore\n  // @fb-only: typeof node === 'string' ? node : node.key\n  // prettier-ignore\n  // @fb-only: }`,\n  // prettier-ignore\n  // @fb-only: window.performance.now(),\n  // prettier-ignore\n  // @fb-only: fn,\n  // prettier-ignore\n  // @fb-only: );\n  // prettier-ignore\n  // @fb-only: }\n  // prettier-ignore\n  // @fb-only: }\n  return fn();\n}\n\nfunction wrap(fn) {\n  // prettier-ignore\n  // @fb-only: if (__DEV__) {\n  // prettier-ignore\n  // @fb-only: if (SchedulerTracing.unstable_wrap !== undefined) {\n  // prettier-ignore\n  // @fb-only: return SchedulerTracing.unstable_wrap(fn);\n  // prettier-ignore\n  // @fb-only: }\n  // prettier-ignore\n  // @fb-only: }\n  return fn;\n}\n\nvar Recoil_Tracing = {\n  trace: trace,\n  wrap: wrap\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction unionSets() {\n  var result = new Set();\n\n  for (var _len4 = arguments.length, sets = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    sets[_key4] = arguments[_key4];\n  }\n\n  for (var _i = 0, _sets = sets; _i < _sets.length; _i++) {\n    var set = _sets[_i];\n\n    var _iterator4 = _createForOfIteratorHelper(set),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var value = _step4.value;\n        result.add(value);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  }\n\n  return result;\n}\n\nvar Recoil_unionSets = unionSets;\nvar mapByDeletingFromMap$2 = Recoil_CopyOnWrite.mapByDeletingFromMap,\n    mapByDeletingMultipleFromMap$1 = Recoil_CopyOnWrite.mapByDeletingMultipleFromMap;\nvar getNodeLoadable$1 = Recoil_FunctionalCore.getNodeLoadable,\n    setNodeValue$1 = Recoil_FunctionalCore.setNodeValue,\n    setUnvalidatedAtomValue$1 = Recoil_FunctionalCore.setUnvalidatedAtomValue;\nvar saveDependencyMapToStore$1 = Recoil_Graph.saveDependencyMapToStore;\nvar DefaultValue$1 = Recoil_Node.DefaultValue,\n    RecoilValueNotReady$1 = Recoil_Node.RecoilValueNotReady;\nvar AbstractRecoilValue$1 = Recoil_RecoilValue$1.AbstractRecoilValue,\n    RecoilState$1 = Recoil_RecoilValue$1.RecoilState,\n    RecoilValueReadOnly$1 = Recoil_RecoilValue$1.RecoilValueReadOnly,\n    isRecoilValue$1 = Recoil_RecoilValue$1.isRecoilValue;\n\nfunction getRecoilValueAsLoadable(store, _ref3) {\n  var key = _ref3.key;\n  var treeState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : store.getState().currentTree;\n\n  var _storeState$nextTree, _storeState$previousT; // Reading from an older tree can cause bugs because the dependencies that we\n  // discover during the read are lost.\n\n\n  var storeState = store.getState();\n\n  if (!(treeState.version === storeState.currentTree.version || treeState.version === ((_storeState$nextTree = storeState.nextTree) === null || _storeState$nextTree === void 0 ? void 0 : _storeState$nextTree.version) || treeState.version === ((_storeState$previousT = storeState.previousTree) === null || _storeState$previousT === void 0 ? void 0 : _storeState$previousT.version))) {\n    Recoil_recoverableViolation('Tried to read from a discarded tree');\n  }\n\n  var _getNodeLoadable$ = getNodeLoadable$1(store, treeState, key),\n      _getNodeLoadable$2 = _slicedToArray(_getNodeLoadable$, 2),\n      dependencyMap = _getNodeLoadable$2[0],\n      loadable = _getNodeLoadable$2[1];\n\n  saveDependencyMapToStore$1(dependencyMap, store, treeState.version);\n  return loadable;\n}\n\nfunction applyAtomValueWrites(atomValues, writes) {\n  var result = Recoil_mapMap(atomValues, function (v) {\n    return v;\n  });\n  writes.forEach(function (v, k) {\n    if (v.state === 'hasValue' && v.contents instanceof DefaultValue$1) {\n      result.delete(k);\n    } else {\n      result.set(k, v);\n    }\n  });\n  return result;\n}\n\nfunction valueFromValueOrUpdater(store, _ref4, valueOrUpdater) {\n  var key = _ref4.key;\n\n  if (typeof valueOrUpdater === 'function') {\n    var _storeState$nextTree2; // Updater form: pass in the current value. Throw if the current value\n    // is unavailable (namely when updating an async selector that's\n    // pending or errored):\n\n\n    var storeState = store.getState();\n    var state = (_storeState$nextTree2 = storeState.nextTree) !== null && _storeState$nextTree2 !== void 0 ? _storeState$nextTree2 : storeState.currentTree; // NOTE: This will evaluate node, but not update state with node subscriptions!\n\n    var current = getNodeLoadable$1(store, state, key)[1];\n\n    if (current.state === 'loading') {\n      throw new RecoilValueNotReady$1(key);\n    } else if (current.state === 'hasError') {\n      throw current.contents;\n    } // T itself may be a function, so our refinement is not sufficient:\n\n\n    return valueOrUpdater(current.contents); // flowlint-line unclear-type:off\n  } else {\n    return valueOrUpdater;\n  }\n}\n\nfunction setRecoilValue(store, recoilValue, valueOrUpdater) {\n  var key = recoilValue.key;\n  Recoil_Tracing.trace('set RecoilValue', key, function () {\n    return store.replaceState(Recoil_Tracing.wrap(function (state) {\n      var newValue = valueFromValueOrUpdater(store, recoilValue, valueOrUpdater);\n\n      var _setNodeValue$ = setNodeValue$1(store, state, key, newValue),\n          _setNodeValue$2 = _slicedToArray(_setNodeValue$, 2),\n          depMap = _setNodeValue$2[0],\n          writes = _setNodeValue$2[1];\n\n      var writtenNodes = new Set(writes.keys());\n      saveDependencyMapToStore$1(depMap, store, state.version);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        dirtyAtoms: Recoil_unionSets(state.dirtyAtoms, writtenNodes),\n        atomValues: applyAtomValueWrites(state.atomValues, writes),\n        nonvalidatedAtoms: mapByDeletingMultipleFromMap$1(state.nonvalidatedAtoms, writtenNodes)\n      });\n    }));\n  });\n}\n\nfunction setRecoilValueLoadable(store, recoilValue, loadable) {\n  if (loadable instanceof DefaultValue$1) {\n    return setRecoilValue(store, recoilValue, loadable);\n  }\n\n  var key = recoilValue.key;\n  Recoil_Tracing.trace('set RecoilValue', key, function () {\n    return store.replaceState(Recoil_Tracing.wrap(function (state) {\n      var writtenNode = new Set([key]);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        dirtyAtoms: Recoil_unionSets(state.dirtyAtoms, writtenNode),\n        atomValues: applyAtomValueWrites(state.atomValues, new Map([[key, loadable]])),\n        nonvalidatedAtoms: mapByDeletingFromMap$2(state.nonvalidatedAtoms, key)\n      });\n    }));\n  });\n}\n\nfunction markRecoilValueModified(store, _ref5) {\n  var key = _ref5.key;\n  Recoil_Tracing.trace('mark RecoilValue modified', key, function () {\n    return store.replaceState(Recoil_Tracing.wrap(function (state) {\n      return _objectSpread(_objectSpread({}, state), {}, {\n        dirtyAtoms: Recoil_unionSets(state.dirtyAtoms, new Set([key]))\n      });\n    }));\n  });\n}\n\nfunction setUnvalidatedRecoilValue(store, _ref6, newValue) {\n  var key = _ref6.key;\n  Recoil_Tracing.trace('set unvalidated persisted atom', key, function () {\n    return store.replaceState(Recoil_Tracing.wrap(function (state) {\n      var newState = setUnvalidatedAtomValue$1(state, key, newValue);\n      return newState;\n    }));\n  });\n}\n\nvar subscriptionID = 0;\n\nfunction subscribeToRecoilValue(store, _ref7, callback) {\n  var key = _ref7.key;\n  var subID = subscriptionID++;\n  var storeState = store.getState();\n\n  if (!storeState.nodeToComponentSubscriptions.has(key)) {\n    storeState.nodeToComponentSubscriptions.set(key, new Map());\n  }\n\n  Recoil_nullthrows(storeState.nodeToComponentSubscriptions.get(key)).set(subID, ['TODO debug name', callback]);\n  return {\n    release: function release() {\n      var storeState = store.getState();\n      var subs = storeState.nodeToComponentSubscriptions.get(key);\n\n      if (subs === undefined || !subs.has(subID)) {\n        Recoil_recoverableViolation(\"Subscription missing at release time for atom \".concat(key, \". This is a bug in Recoil.\"));\n        return;\n      }\n\n      subs.delete(subID);\n\n      if (subs.size === 0) {\n        storeState.nodeToComponentSubscriptions.delete(key);\n      }\n    }\n  };\n}\n\nvar Recoil_RecoilValueInterface = {\n  RecoilValueReadOnly: RecoilValueReadOnly$1,\n  AbstractRecoilValue: AbstractRecoilValue$1,\n  RecoilState: RecoilState$1,\n  getRecoilValueAsLoadable: getRecoilValueAsLoadable,\n  setRecoilValue: setRecoilValue,\n  setRecoilValueLoadable: setRecoilValueLoadable,\n  markRecoilValueModified: markRecoilValueModified,\n  setUnvalidatedRecoilValue: setUnvalidatedRecoilValue,\n  subscribeToRecoilValue: subscribeToRecoilValue,\n  isRecoilValue: isRecoilValue$1,\n  applyAtomValueWrites: applyAtomValueWrites // TODO Remove export when deprecating initialStoreState_DEPRECATED in RecoilRoot\n\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n/**\n * Combines multiple Iterables into a single Iterable.\n * Traverses the input Iterables in the order provided and maintains the order\n * of their elements.\n *\n * Example:\n * ```\n * const r = Array.from(concatIterables(['a', 'b'], ['c'], ['d', 'e', 'f']));\n * r == ['a', 'b', 'c', 'd', 'e', 'f'];\n * ```\n */\n\nfunction concatIterables(iters) {\n  var _iterator5, _step5, iter, _iterator6, _step6, val;\n\n  return _regeneratorRuntime.wrap(function concatIterables$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _iterator5 = _createForOfIteratorHelper(iters);\n          _context.prev = 1;\n\n          _iterator5.s();\n\n        case 3:\n          if ((_step5 = _iterator5.n()).done) {\n            _context.next = 24;\n            break;\n          }\n\n          iter = _step5.value;\n          _iterator6 = _createForOfIteratorHelper(iter);\n          _context.prev = 6;\n\n          _iterator6.s();\n\n        case 8:\n          if ((_step6 = _iterator6.n()).done) {\n            _context.next = 14;\n            break;\n          }\n\n          val = _step6.value;\n          _context.next = 12;\n          return val;\n\n        case 12:\n          _context.next = 8;\n          break;\n\n        case 14:\n          _context.next = 19;\n          break;\n\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](6);\n\n          _iterator6.e(_context.t0);\n\n        case 19:\n          _context.prev = 19;\n\n          _iterator6.f();\n\n          return _context.finish(19);\n\n        case 22:\n          _context.next = 3;\n          break;\n\n        case 24:\n          _context.next = 29;\n          break;\n\n        case 26:\n          _context.prev = 26;\n          _context.t1 = _context[\"catch\"](1);\n\n          _iterator5.e(_context.t1);\n\n        case 29:\n          _context.prev = 29;\n\n          _iterator5.f();\n\n          return _context.finish(29);\n\n        case 32:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 26, 29, 32], [6, 16, 19, 22]]);\n}\n\nvar Recoil_concatIterables = concatIterables;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n/**\n * Creates a new iterable whose output is generated by passing the input\n * iterable's values through the filter function.\n */\n\nfunction filterIterable(iterable, predicate) {\n  var index, _iterator7, _step7, value;\n\n  return _regeneratorRuntime.wrap(function filterIterable$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          // Use generator to create iterable/iterator\n          index = 0;\n          _iterator7 = _createForOfIteratorHelper(iterable);\n          _context2.prev = 2;\n\n          _iterator7.s();\n\n        case 4:\n          if ((_step7 = _iterator7.n()).done) {\n            _context2.next = 11;\n            break;\n          }\n\n          value = _step7.value;\n\n          if (!predicate(value, index++)) {\n            _context2.next = 9;\n            break;\n          }\n\n          _context2.next = 9;\n          return value;\n\n        case 9:\n          _context2.next = 4;\n          break;\n\n        case 11:\n          _context2.next = 16;\n          break;\n\n        case 13:\n          _context2.prev = 13;\n          _context2.t0 = _context2[\"catch\"](2);\n\n          _iterator7.e(_context2.t0);\n\n        case 16:\n          _context2.prev = 16;\n\n          _iterator7.f();\n\n          return _context2.finish(16);\n\n        case 19:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[2, 13, 16, 19]]);\n}\n\nvar Recoil_filterIterable = filterIterable;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nvar gks = new Map();\n\nfunction Recoil_gkx(gk) {\n  var _gks$get;\n\n  return (_gks$get = gks.get(gk)) !== null && _gks$get !== void 0 ? _gks$get : false;\n}\n\nRecoil_gkx.setPass = function (gk) {\n  gks.set(gk, true);\n};\n\nRecoil_gkx.setFail = function (gk) {\n  gks.set(gk, false);\n};\n\nvar Recoil_gkx_1 = Recoil_gkx;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n/**\n * Creates a new iterable whose output is generated by passing the input\n * iterable's values through the mapper function.\n */\n\nfunction mapIterable(iterable, callback) {\n  // Use generator to create iterable/iterator\n  return /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var index, _iterator8, _step8, value;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            index = 0;\n            _iterator8 = _createForOfIteratorHelper(iterable);\n            _context3.prev = 2;\n\n            _iterator8.s();\n\n          case 4:\n            if ((_step8 = _iterator8.n()).done) {\n              _context3.next = 10;\n              break;\n            }\n\n            value = _step8.value;\n            _context3.next = 8;\n            return callback(value, index++);\n\n          case 8:\n            _context3.next = 4;\n            break;\n\n          case 10:\n            _context3.next = 15;\n            break;\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](2);\n\n            _iterator8.e(_context3.t0);\n\n          case 15:\n            _context3.prev = 15;\n\n            _iterator8.f();\n\n            return _context3.finish(15);\n\n          case 18:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee, null, [[2, 12, 15, 18]]);\n  })();\n}\n\nvar Recoil_mapIterable = mapIterable;\nvar graph$1 = Recoil_Graph.graph; // flowlint-next-line unclear-type:off\n\nvar nextTreeStateVersion = 0;\n\nvar getNextTreeStateVersion = function getNextTreeStateVersion() {\n  return nextTreeStateVersion++;\n};\n\nfunction makeEmptyTreeState() {\n  var version = getNextTreeStateVersion();\n  return {\n    version: version,\n    stateID: version,\n    transactionMetadata: {},\n    dirtyAtoms: new Set(),\n    atomValues: new Map(),\n    nonvalidatedAtoms: new Map()\n  };\n}\n\nfunction makeEmptyStoreState() {\n  var currentTree = makeEmptyTreeState();\n  return {\n    currentTree: currentTree,\n    nextTree: null,\n    previousTree: null,\n    knownAtoms: new Set(),\n    knownSelectors: new Set(),\n    transactionSubscriptions: new Map(),\n    nodeTransactionSubscriptions: new Map(),\n    nodeToComponentSubscriptions: new Map(),\n    queuedComponentCallbacks_DEPRECATED: [],\n    suspendedComponentResolvers: new Set(),\n    graphsByVersion: new Map().set(currentTree.version, graph$1()),\n    versionsUsedByComponent: new Map()\n  };\n}\n\nvar Recoil_State = {\n  makeEmptyTreeState: makeEmptyTreeState,\n  makeEmptyStoreState: makeEmptyStoreState,\n  getNextTreeStateVersion: getNextTreeStateVersion\n};\nvar getDownstreamNodes$1 = Recoil_FunctionalCore.getDownstreamNodes,\n    peekNodeLoadable$1 = Recoil_FunctionalCore.peekNodeLoadable;\nvar graph$2 = Recoil_Graph.graph;\nvar DEFAULT_VALUE$1 = Recoil_Node.DEFAULT_VALUE,\n    recoilValues$1 = Recoil_Node.recoilValues;\nvar getRecoilValueAsLoadable$1 = Recoil_RecoilValueInterface.getRecoilValueAsLoadable,\n    setRecoilValue$1 = Recoil_RecoilValueInterface.setRecoilValue;\nvar getNextTreeStateVersion$1 = Recoil_State.getNextTreeStateVersion,\n    makeEmptyStoreState$1 = Recoil_State.makeEmptyStoreState; // Opaque at this surface because it's part of the public API from here.\n\nfunction recoilValuesForKeys(keys) {\n  return Recoil_mapIterable(keys, function (key) {\n    return Recoil_nullthrows(recoilValues$1.get(key));\n  });\n} // A \"Snapshot\" is \"read-only\" and captures a specific set of values of atoms.\n// However, the data-flow-graph and selector values may evolve as selector\n// evaluation functions are executed and async selectors resolve.\n\n\nvar Snapshot = /*#__PURE__*/function () {\n  function Snapshot(storeState) {\n    var _this = this;\n\n    _classCallCheck(this, Snapshot);\n\n    _defineProperty(this, \"_store\", void 0);\n\n    _defineProperty(this, \"getLoadable\", function (recoilValue) {\n      return getRecoilValueAsLoadable$1(_this._store, recoilValue);\n    });\n\n    _defineProperty(this, \"getPromise\", function (recoilValue) {\n      return Recoil_gkx_1('recoil_async_selector_refactor') ? _this.getLoadable(recoilValue).toPromise().then(function (_ref8) {\n        var value = _ref8.value;\n        return value;\n      }) : _this.getLoadable(recoilValue).toPromise();\n    });\n\n    _defineProperty(this, \"getNodes_UNSTABLE\", function (opt) {\n      // TODO Deal with modified selectors\n      if ((opt === null || opt === void 0 ? void 0 : opt.isModified) === true) {\n        if ((opt === null || opt === void 0 ? void 0 : opt.isInitialized) === false) {\n          return [];\n        }\n\n        var state = _this._store.getState().currentTree;\n\n        return recoilValuesForKeys(state.dirtyAtoms);\n      }\n\n      var knownAtoms = _this._store.getState().knownAtoms;\n\n      var knownSelectors = _this._store.getState().knownSelectors;\n\n      return (opt === null || opt === void 0 ? void 0 : opt.isInitialized) == null ? recoilValues$1.values() : opt.isInitialized === true ? recoilValuesForKeys(Recoil_concatIterables([_this._store.getState().knownAtoms, _this._store.getState().knownSelectors])) : Recoil_filterIterable(recoilValues$1.values(), function (_ref9) {\n        var key = _ref9.key;\n        return !knownAtoms.has(key) && !knownSelectors.has(key);\n      });\n    });\n\n    _defineProperty(this, \"getDeps_UNSTABLE\", function (recoilValue) {\n      _this.getLoadable(recoilValue); // Evaluate node to ensure deps are up-to-date\n\n\n      var deps = _this._store.getGraph(_this._store.getState().currentTree.version).nodeDeps.get(recoilValue.key);\n\n      return recoilValuesForKeys(deps !== null && deps !== void 0 ? deps : []);\n    });\n\n    _defineProperty(this, \"getSubscribers_UNSTABLE\", function (_ref10) {\n      var key = _ref10.key;\n\n      var state = _this._store.getState().currentTree;\n\n      var downstreamNodes = Recoil_filterIterable(getDownstreamNodes$1(_this._store, state, new Set([key])), function (nodeKey) {\n        return nodeKey !== key;\n      });\n      return {\n        nodes: recoilValuesForKeys(downstreamNodes)\n      };\n    });\n\n    _defineProperty(this, \"getInfo_UNSTABLE\", function (recoilValue) {\n      var _graph$nodeDeps$get;\n\n      var key = recoilValue.key;\n\n      var state = _this._store.getState().currentTree;\n\n      var graph = _this._store.getGraph(state.version);\n\n      return {\n        loadable: peekNodeLoadable$1(_this._store, state, key),\n        isActive: _this._store.getState().knownAtoms.has(key) || _this._store.getState().knownSelectors.has(key),\n        isSet: state.atomValues.has(key),\n        isModified: state.dirtyAtoms.has(key),\n        type: _this._store.getState().knownAtoms.has(key) ? 'atom' : _this._store.getState().knownSelectors.has(key) ? 'selector' : undefined,\n        // Don't use this.getDeps() as it will evaluate the node and we are only peeking\n        deps: recoilValuesForKeys((_graph$nodeDeps$get = graph.nodeDeps.get(key)) !== null && _graph$nodeDeps$get !== void 0 ? _graph$nodeDeps$get : []),\n        subscribers: _this.getSubscribers_UNSTABLE(recoilValue)\n      };\n    });\n\n    _defineProperty(this, \"map\", function (mapper) {\n      var mutableSnapshot = new MutableSnapshot(_this);\n      mapper(mutableSnapshot);\n      return cloneSnapshot(mutableSnapshot.getStore_INTERNAL());\n    });\n\n    _defineProperty(this, \"asyncMap\", /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(mapper) {\n        var mutableSnapshot;\n        return _regeneratorRuntime.wrap(function _callee2$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                mutableSnapshot = new MutableSnapshot(_this);\n                _context4.next = 3;\n                return mapper(mutableSnapshot);\n\n              case 3:\n                return _context4.abrupt(\"return\", cloneSnapshot(mutableSnapshot.getStore_INTERNAL()));\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref11.apply(this, arguments);\n      };\n    }());\n\n    this._store = {\n      getState: function getState() {\n        return storeState;\n      },\n      replaceState: function replaceState(replacer) {\n        storeState.currentTree = replacer(storeState.currentTree); // no batching so nextTree is never active\n      },\n      getGraph: function getGraph(version) {\n        var graphs = storeState.graphsByVersion;\n\n        if (graphs.has(version)) {\n          return Recoil_nullthrows(graphs.get(version));\n        }\n\n        var newGraph = graph$2();\n        graphs.set(version, newGraph);\n        return newGraph;\n      },\n      subscribeToTransactions: function subscribeToTransactions() {\n        return {\n          release: function release() {}\n        };\n      },\n      addTransactionMetadata: function addTransactionMetadata() {\n        throw new Error('Cannot subscribe to Snapshots');\n      }\n    };\n  }\n\n  _createClass(Snapshot, [{\n    key: \"getStore_INTERNAL\",\n    value: function getStore_INTERNAL() {\n      return this._store;\n    }\n  }, {\n    key: \"getID\",\n    value: function getID() {\n      return this.getID_INTERNAL();\n    }\n  }, {\n    key: \"getID_INTERNAL\",\n    value: function getID_INTERNAL() {\n      return this._store.getState().currentTree.stateID;\n    }\n  }]);\n\n  return Snapshot;\n}();\n\nfunction cloneStoreState(store, treeState) {\n  var bumpVersion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var storeState = store.getState();\n  var version = bumpVersion ? getNextTreeStateVersion$1() : treeState.version;\n  return {\n    currentTree: bumpVersion ? {\n      // TODO snapshots shouldn't really have versions because a new version number\n      // is always assigned when the snapshot is gone to.\n      version: version,\n      stateID: version,\n      transactionMetadata: _objectSpread({}, treeState.transactionMetadata),\n      dirtyAtoms: new Set(treeState.dirtyAtoms),\n      atomValues: new Map(treeState.atomValues),\n      nonvalidatedAtoms: new Map(treeState.nonvalidatedAtoms)\n    } : treeState,\n    nextTree: null,\n    previousTree: null,\n    knownAtoms: new Set(storeState.knownAtoms),\n    knownSelectors: new Set(storeState.knownSelectors),\n    transactionSubscriptions: new Map(),\n    nodeTransactionSubscriptions: new Map(),\n    nodeToComponentSubscriptions: new Map(),\n    queuedComponentCallbacks_DEPRECATED: [],\n    suspendedComponentResolvers: new Set(),\n    graphsByVersion: new Map().set(version, store.getGraph(treeState.version)),\n    versionsUsedByComponent: new Map()\n  };\n} // Factory to build a fresh snapshot\n\n\nfunction freshSnapshot() {\n  return new Snapshot(makeEmptyStoreState$1());\n} // Factory to clone a snapahot state\n\n\nfunction cloneSnapshot(store) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'current';\n  var storeState = store.getState();\n  var treeState = version === 'current' ? storeState.currentTree : Recoil_nullthrows(storeState.previousTree);\n  return new Snapshot(cloneStoreState(store, treeState));\n}\n\nvar MutableSnapshot = /*#__PURE__*/function (_Snapshot) {\n  _inherits(MutableSnapshot, _Snapshot);\n\n  var _super6 = _createSuper(MutableSnapshot);\n\n  function MutableSnapshot(snapshot) {\n    var _this2;\n\n    _classCallCheck(this, MutableSnapshot);\n\n    _this2 = _super6.call(this, cloneStoreState(snapshot.getStore_INTERNAL(), snapshot.getStore_INTERNAL().getState().currentTree, true));\n\n    _defineProperty(_assertThisInitialized(_this2), \"set\", function (recoilState, newValueOrUpdater) {\n      var store = _this2.getStore_INTERNAL();\n\n      setRecoilValue$1(store, recoilState, newValueOrUpdater);\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"reset\", function (recoilState) {\n      return setRecoilValue$1(_this2.getStore_INTERNAL(), recoilState, DEFAULT_VALUE$1);\n    });\n\n    return _this2;\n  } // We want to allow the methods to be destructured and used as accessors\n  // eslint-disable-next-line fb-www/extra-arrow-initializer\n\n\n  return MutableSnapshot;\n}(Snapshot);\n\nvar Recoil_Snapshot = {\n  Snapshot: Snapshot,\n  MutableSnapshot: MutableSnapshot,\n  freshSnapshot: freshSnapshot,\n  cloneSnapshot: cloneSnapshot\n};\nvar Recoil_Snapshot_1 = Recoil_Snapshot.Snapshot;\nvar Recoil_Snapshot_2 = Recoil_Snapshot.MutableSnapshot;\nvar Recoil_Snapshot_3 = Recoil_Snapshot.freshSnapshot;\nvar Recoil_Snapshot_4 = Recoil_Snapshot.cloneSnapshot;\nvar Recoil_Snapshot$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Snapshot: Recoil_Snapshot_1,\n  MutableSnapshot: Recoil_Snapshot_2,\n  freshSnapshot: Recoil_Snapshot_3,\n  cloneSnapshot: Recoil_Snapshot_4\n});\nvar useContext = react.useContext,\n    useEffect = react.useEffect,\n    useMemo = react.useMemo,\n    useRef = react.useRef,\n    useState = react.useState; // @fb-only: const RecoilusagelogEvent = require('RecoilusagelogEvent');\n// @fb-only: const RecoilUsageLogFalcoEvent = require('RecoilUsageLogFalcoEvent');\n// @fb-only: const URI = require('URI');\n\nvar getDownstreamNodes$2 = Recoil_FunctionalCore.getDownstreamNodes,\n    setNodeValue$2 = Recoil_FunctionalCore.setNodeValue,\n    setUnvalidatedAtomValue$2 = Recoil_FunctionalCore.setUnvalidatedAtomValue;\nvar graph$3 = Recoil_Graph.graph,\n    saveDependencyMapToStore$2 = Recoil_Graph.saveDependencyMapToStore;\nvar cloneGraph$1 = Recoil_Graph.cloneGraph;\nvar applyAtomValueWrites$1 = Recoil_RecoilValueInterface.applyAtomValueWrites;\nvar freshSnapshot$1 = Recoil_Snapshot$1.freshSnapshot;\nvar getNextTreeStateVersion$2 = Recoil_State.getNextTreeStateVersion,\n    makeEmptyStoreState$2 = Recoil_State.makeEmptyStoreState;\nvar mapByDeletingMultipleFromMap$2 = Recoil_CopyOnWrite.mapByDeletingMultipleFromMap; // @fb-only: const recoverableViolation = require('../util/Recoil_recoverableViolation');\n// @fb-only: const gkx = require('gkx');\n\nfunction notInAContext() {\n  throw new Error('This component must be used inside a <RecoilRoot> component.');\n}\n\nvar defaultStore = Object.freeze({\n  getState: notInAContext,\n  replaceState: notInAContext,\n  getGraph: notInAContext,\n  subscribeToTransactions: notInAContext,\n  addTransactionMetadata: notInAContext\n});\nvar stateReplacerIsBeingExecuted = false;\n\nfunction startNextTreeIfNeeded(storeState) {\n  if (stateReplacerIsBeingExecuted) {\n    throw new Error('An atom update was triggered within the execution of a state updater function. State updater functions provided to Recoil must be pure functions.');\n  }\n\n  if (storeState.nextTree === null) {\n    var version = storeState.currentTree.version;\n    var nextVersion = getNextTreeStateVersion$2();\n    storeState.nextTree = _objectSpread(_objectSpread({}, storeState.currentTree), {}, {\n      version: nextVersion,\n      stateID: nextVersion,\n      dirtyAtoms: new Set(),\n      transactionMetadata: {}\n    });\n    storeState.graphsByVersion.set(nextVersion, cloneGraph$1(Recoil_nullthrows(storeState.graphsByVersion.get(version))));\n  }\n}\n\nvar AppContext = react.createContext({\n  current: defaultStore\n});\n\nvar useStoreRef = function useStoreRef() {\n  return useContext(AppContext);\n};\n\nvar MutableSourceContext = react.createContext(null); // TODO T2710559282599660\n\nvar useRecoilMutableSource = function useRecoilMutableSource() {\n  return useContext(MutableSourceContext);\n};\n\nfunction sendEndOfBatchNotifications(store) {\n  var storeState = store.getState();\n  var treeState = storeState.currentTree; // Inform transaction subscribers of the transaction:\n\n  var dirtyAtoms = treeState.dirtyAtoms;\n\n  if (dirtyAtoms.size) {\n    // Execute Node-specific subscribers before global subscribers\n    var _iterator9 = _createForOfIteratorHelper(storeState.nodeTransactionSubscriptions),\n        _step9;\n\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var _step9$value = _slicedToArray(_step9.value, 2),\n            key = _step9$value[0],\n            subscriptions = _step9$value[1];\n\n        if (dirtyAtoms.has(key)) {\n          var _iterator12 = _createForOfIteratorHelper(subscriptions),\n              _step12;\n\n          try {\n            for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n              var _step12$value = _slicedToArray(_step12.value, 2),\n                  _ = _step12$value[0],\n                  subscription = _step12$value[1];\n\n              subscription(store);\n            }\n          } catch (err) {\n            _iterator12.e(err);\n          } finally {\n            _iterator12.f();\n          }\n        }\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n\n    var _iterator10 = _createForOfIteratorHelper(storeState.transactionSubscriptions),\n        _step10;\n\n    try {\n      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n        var _step10$value = _slicedToArray(_step10.value, 2),\n            _2 = _step10$value[0],\n            _subscription = _step10$value[1];\n\n        _subscription(store);\n      } // Components that are subscribed to the dirty atom:\n\n    } catch (err) {\n      _iterator10.e(err);\n    } finally {\n      _iterator10.f();\n    }\n\n    var dependentNodes = getDownstreamNodes$2(store, treeState, dirtyAtoms);\n\n    var _iterator11 = _createForOfIteratorHelper(dependentNodes),\n        _step11;\n\n    try {\n      for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n        var _key5 = _step11.value;\n        var comps = storeState.nodeToComponentSubscriptions.get(_key5);\n\n        if (comps) {\n          var _iterator13 = _createForOfIteratorHelper(comps),\n              _step13;\n\n          try {\n            for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n              var _step13$value = _slicedToArray(_step13.value, 2),\n                  _subID = _step13$value[0],\n                  _step13$value$ = _slicedToArray(_step13$value[1], 2),\n                  _debugName = _step13$value$[0],\n                  callback = _step13$value$[1];\n\n              callback(treeState);\n            }\n          } catch (err) {\n            _iterator13.e(err);\n          } finally {\n            _iterator13.f();\n          }\n        }\n      } // Wake all suspended components so the right one(s) can try to re-render.\n      // We need to wake up components not just when some asynchronous selector\n      // resolved, but also when changing synchronous values because this may cause\n      // a selector to change from asynchronous to synchronous, in which case there\n      // would be no follow-up asynchronous resolution to wake us up.\n      // TODO OPTIMIZATION Only wake up related downstream components\n\n    } catch (err) {\n      _iterator11.e(err);\n    } finally {\n      _iterator11.f();\n    }\n\n    var nodeNames = '[available in dev build]';\n\n    if (process.env.NODE_ENV !== \"production\") {\n      nodeNames = Array.from(dirtyAtoms).join(', ');\n    }\n\n    storeState.suspendedComponentResolvers.forEach(function (cb) {\n      return Recoil_Tracing.trace('value became available, waking components', nodeNames, cb);\n    });\n  } // Special behavior ONLY invoked by useInterface.\n  // FIXME delete queuedComponentCallbacks_DEPRECATED when deleting useInterface.\n\n\n  storeState.queuedComponentCallbacks_DEPRECATED.forEach(function (cb) {\n    return cb(treeState);\n  });\n  storeState.queuedComponentCallbacks_DEPRECATED.splice(0, storeState.queuedComponentCallbacks_DEPRECATED.length);\n}\n/*\n * The purpose of the Batcher is to observe when React batches end so that\n * Recoil state changes can be batched. Whenever Recoil state changes, we call\n * setState on the batcher. Then we wait for that change to be committed, which\n * signifies the end of the batch. That's when we respond to the Recoil change.\n */\n\n\nfunction Batcher(props) {\n  var storeRef = useStoreRef();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      _ = _useState2[0],\n      setState = _useState2[1];\n\n  props.setNotifyBatcherOfChange(function () {\n    return setState({});\n  });\n  useEffect(function () {\n    // enqueueExecution runs this function immediately; it is only used to\n    // manipulate the order of useEffects during tests, since React seems to\n    // call useEffect in an unpredictable order sometimes.\n    Recoil_Queue.enqueueExecution('Batcher', function () {\n      var storeState = storeRef.current.getState();\n      var nextTree = storeState.nextTree; // Ignore commits that are not because of Recoil transactions -- namely,\n      // because something above RecoilRoot re-rendered:\n\n      if (nextTree === null) {\n        return;\n      } // nextTree is now committed -- note that copying and reset occurs when\n      // a transaction begins, in startNextTreeIfNeeded:\n\n\n      storeState.previousTree = storeState.currentTree;\n      storeState.currentTree = nextTree;\n      storeState.nextTree = null;\n      sendEndOfBatchNotifications(storeRef.current);\n      var discardedVersion = Recoil_nullthrows(storeState.previousTree).version;\n      storeState.graphsByVersion.delete(discardedVersion);\n      storeState.previousTree = null;\n    });\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  if (typeof window !== 'undefined' && !window.$recoilDebugStates) {\n    window.$recoilDebugStates = [];\n  }\n} // When removing this deprecated function, remove stateBySettingRecoilValue\n// which will no longer be needed.\n\n\nfunction initialStoreState_DEPRECATED(store, initializeState) {\n  var initial = makeEmptyStoreState$2();\n  initializeState({\n    set: function set(atom, value) {\n      var state = initial.currentTree;\n\n      var _setNodeValue$3 = setNodeValue$2(store, state, atom.key, value),\n          _setNodeValue$4 = _slicedToArray(_setNodeValue$3, 2),\n          depMap = _setNodeValue$4[0],\n          writes = _setNodeValue$4[1];\n\n      var writtenNodes = new Set(writes.keys());\n      saveDependencyMapToStore$2(depMap, store, state.version);\n      var nonvalidatedAtoms = mapByDeletingMultipleFromMap$2(state.nonvalidatedAtoms, writtenNodes);\n      initial.currentTree = _objectSpread(_objectSpread({}, state), {}, {\n        dirtyAtoms: Recoil_unionSets(state.dirtyAtoms, writtenNodes),\n        atomValues: applyAtomValueWrites$1(state.atomValues, writes),\n        // NB: PLEASE un-export applyAtomValueWrites when deleting this code\n        nonvalidatedAtoms: nonvalidatedAtoms\n      });\n    },\n    setUnvalidatedAtomValues: function setUnvalidatedAtomValues(atomValues) {\n      atomValues.forEach(function (v, k) {\n        initial.currentTree = setUnvalidatedAtomValue$2(initial.currentTree, k, v);\n      });\n    }\n  });\n  return initial;\n}\n\nfunction initialStoreState(initializeState) {\n  var snapshot = freshSnapshot$1().map(initializeState);\n  return snapshot.getStore_INTERNAL().getState();\n}\n\nvar nextID = 0;\n\nfunction RecoilRoot(_ref12) {\n  var initializeState_DEPRECATED = _ref12.initializeState_DEPRECATED,\n      initializeState = _ref12.initializeState,\n      storeProp = _ref12.store_INTERNAL,\n      children = _ref12.children;\n\n  var _createMutableSource; // prettier-ignore\n  // @fb-only: useEffect(() => {\n  // @fb-only: if (gkx('recoil_usage_logging')) {\n  // @fb-only: try {\n  // @fb-only: RecoilUsageLogFalcoEvent.log(() => ({\n  // @fb-only: type: RecoilusagelogEvent.RECOIL_ROOT_MOUNTED,\n  // @fb-only: path: URI.getRequestURI().getPath(),\n  // @fb-only: }));\n  // @fb-only: } catch {\n  // @fb-only: recoverableViolation(\n  // @fb-only: 'Error when logging Recoil Usage event',\n  // @fb-only: 'recoil',\n  // @fb-only: );\n  // @fb-only: }\n  // @fb-only: }\n  // @fb-only: }, []);\n\n\n  var storeState; // eslint-disable-line prefer-const\n\n  var getGraph = function getGraph(version) {\n    var graphs = storeState.current.graphsByVersion;\n\n    if (graphs.has(version)) {\n      return Recoil_nullthrows(graphs.get(version));\n    }\n\n    var newGraph = graph$3();\n    graphs.set(version, newGraph);\n    return newGraph;\n  };\n\n  var subscribeToTransactions = function subscribeToTransactions(callback, key) {\n    if (key == null) {\n      // Global transaction subscriptions\n      var _storeRef$current$get = storeRef.current.getState(),\n          transactionSubscriptions = _storeRef$current$get.transactionSubscriptions;\n\n      var id = nextID++;\n      transactionSubscriptions.set(id, callback);\n      return {\n        release: function release() {\n          transactionSubscriptions.delete(id);\n        }\n      };\n    } else {\n      // Node-specific transaction subscriptions:\n      var _storeRef$current$get2 = storeRef.current.getState(),\n          nodeTransactionSubscriptions = _storeRef$current$get2.nodeTransactionSubscriptions;\n\n      if (!nodeTransactionSubscriptions.has(key)) {\n        nodeTransactionSubscriptions.set(key, new Map());\n      }\n\n      var _id2 = nextID++;\n\n      Recoil_nullthrows(nodeTransactionSubscriptions.get(key)).set(_id2, callback);\n      return {\n        release: function release() {\n          var subs = nodeTransactionSubscriptions.get(key);\n\n          if (subs) {\n            subs.delete(_id2);\n\n            if (subs.size === 0) {\n              nodeTransactionSubscriptions.delete(key);\n            }\n          }\n        }\n      };\n    }\n  };\n\n  var addTransactionMetadata = function addTransactionMetadata(metadata) {\n    startNextTreeIfNeeded(storeRef.current.getState());\n\n    for (var _i2 = 0, _Object$keys = Object.keys(metadata); _i2 < _Object$keys.length; _i2++) {\n      var k = _Object$keys[_i2];\n      Recoil_nullthrows(storeRef.current.getState().nextTree).transactionMetadata[k] = metadata[k];\n    }\n  };\n\n  var replaceState = function replaceState(replacer) {\n    var storeState = storeRef.current.getState();\n    startNextTreeIfNeeded(storeState); // Use replacer to get the next state:\n\n    var nextTree = Recoil_nullthrows(storeState.nextTree);\n    var replaced;\n\n    try {\n      stateReplacerIsBeingExecuted = true;\n      replaced = replacer(nextTree);\n    } finally {\n      stateReplacerIsBeingExecuted = false;\n    }\n\n    if (replaced === nextTree) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (typeof window !== 'undefined') {\n        window.$recoilDebugStates.push(replaced); // TODO this shouldn't happen here because it's not batched\n      }\n    } // Save changes to nextTree and schedule a React update:\n\n\n    storeState.nextTree = replaced;\n    Recoil_nullthrows(notifyBatcherOfChange.current)();\n  };\n\n  var notifyBatcherOfChange = useRef(null);\n\n  function setNotifyBatcherOfChange(x) {\n    notifyBatcherOfChange.current = x;\n  } // FIXME T2710559282599660\n\n\n  var createMutableSource = (_createMutableSource = react.createMutableSource) !== null && _createMutableSource !== void 0 ? _createMutableSource : // flowlint-line unclear-type:off\n  react.unstable_createMutableSource; // flowlint-line unclear-type:off\n\n  var store = storeProp !== null && storeProp !== void 0 ? storeProp : {\n    getState: function getState() {\n      return storeState.current;\n    },\n    replaceState: replaceState,\n    getGraph: getGraph,\n    subscribeToTransactions: subscribeToTransactions,\n    addTransactionMetadata: addTransactionMetadata\n  };\n  var storeRef = useRef(store);\n  storeState = useRef(initializeState_DEPRECATED != null ? initialStoreState_DEPRECATED(store, initializeState_DEPRECATED) : initializeState != null ? initialStoreState(initializeState) : makeEmptyStoreState$2());\n  var mutableSource = useMemo(function () {\n    return createMutableSource ? createMutableSource(storeState, function () {\n      return storeState.current.currentTree.version;\n    }) : null;\n  }, [createMutableSource, storeState]);\n  return /*#__PURE__*/react.createElement(AppContext.Provider, {\n    value: storeRef\n  }, /*#__PURE__*/react.createElement(MutableSourceContext.Provider, {\n    value: mutableSource\n  }, /*#__PURE__*/react.createElement(Batcher, {\n    setNotifyBatcherOfChange: setNotifyBatcherOfChange\n  }), children));\n}\n\nvar Recoil_RecoilRoot_react = {\n  useStoreRef: useStoreRef,\n  useRecoilMutableSource: useRecoilMutableSource,\n  RecoilRoot: RecoilRoot,\n  sendEndOfBatchNotifications_FOR_TESTING: sendEndOfBatchNotifications\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n/**\n * Returns a map containing all of the keys + values from the original map where\n * the given callback returned true.\n */\n\nfunction filterMap(map, callback) {\n  var result = new Map();\n\n  var _iterator14 = _createForOfIteratorHelper(map),\n      _step14;\n\n  try {\n    for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n      var _step14$value = _slicedToArray(_step14.value, 2),\n          key = _step14$value[0],\n          value = _step14$value[1];\n\n      if (callback(value, key)) {\n        result.set(key, value);\n      }\n    }\n  } catch (err) {\n    _iterator14.e(err);\n  } finally {\n    _iterator14.f();\n  }\n\n  return result;\n}\n\nvar Recoil_filterMap = filterMap;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n/**\n * Returns a set containing all of the values from the original set where\n * the given callback returned true.\n */\n\nfunction filterSet(set, callback) {\n  var result = new Set();\n\n  var _iterator15 = _createForOfIteratorHelper(set),\n      _step15;\n\n  try {\n    for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n      var value = _step15.value;\n\n      if (callback(value)) {\n        result.add(value);\n      }\n    }\n  } catch (err) {\n    _iterator15.e(err);\n  } finally {\n    _iterator15.f();\n  }\n\n  return result;\n}\n\nvar Recoil_filterSet = filterSet;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction invariant(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar invariant_1 = invariant; // @oss-only\n\nvar Recoil_invariant = invariant_1;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction mergeMaps() {\n  var result = new Map();\n\n  for (var _len5 = arguments.length, maps = new Array(_len5), _key6 = 0; _key6 < _len5; _key6++) {\n    maps[_key6] = arguments[_key6];\n  }\n\n  for (var i = 0; i < maps.length; i++) {\n    var iterator = maps[i].keys();\n    var nextKey = void 0;\n\n    while (!(nextKey = iterator.next()).done) {\n      // $FlowFixMe[incompatible-call] - map/iterator knows nothing about flow types\n      result.set(nextKey.value, maps[i].get(nextKey.value));\n    }\n  }\n  /* $FlowFixMe[incompatible-return] (>=0.66.0 site=www,mobile) This comment\n   * suppresses an error found when Flow v0.66 was deployed. To see the error\n   * delete this comment and run Flow. */\n\n\n  return result;\n}\n\nvar Recoil_mergeMaps = mergeMaps;\n\nvar _useMutableSource;\n\nvar useCallback = react.useCallback,\n    useEffect$1 = react.useEffect,\n    useMemo$1 = react.useMemo,\n    useRef$1 = react.useRef,\n    useState$1 = react.useState;\nvar DEFAULT_VALUE$2 = Recoil_Node.DEFAULT_VALUE,\n    getNode$2 = Recoil_Node.getNode,\n    nodes$1 = Recoil_Node.nodes;\nvar useRecoilMutableSource$1 = Recoil_RecoilRoot_react.useRecoilMutableSource,\n    useStoreRef$1 = Recoil_RecoilRoot_react.useStoreRef;\nvar isRecoilValue$2 = Recoil_RecoilValue$1.isRecoilValue;\nvar AbstractRecoilValue$2 = Recoil_RecoilValueInterface.AbstractRecoilValue,\n    getRecoilValueAsLoadable$2 = Recoil_RecoilValueInterface.getRecoilValueAsLoadable,\n    setRecoilValue$2 = Recoil_RecoilValueInterface.setRecoilValue,\n    setRecoilValueLoadable$1 = Recoil_RecoilValueInterface.setRecoilValueLoadable,\n    setUnvalidatedRecoilValue$1 = Recoil_RecoilValueInterface.setUnvalidatedRecoilValue,\n    subscribeToRecoilValue$1 = Recoil_RecoilValueInterface.subscribeToRecoilValue;\nvar Snapshot$1 = Recoil_Snapshot$1.Snapshot,\n    cloneSnapshot$1 = Recoil_Snapshot$1.cloneSnapshot;\nvar setByAddingToSet$2 = Recoil_CopyOnWrite.setByAddingToSet;\n\nfunction handleLoadable(loadable, atom, storeRef) {\n  // We can't just throw the promise we are waiting on to Suspense.  If the\n  // upstream dependencies change it may produce a state in which the component\n  // can render, but it would still be suspended on a Promise that may never resolve.\n  if (loadable.state === 'hasValue') {\n    return loadable.contents;\n  } else if (loadable.state === 'loading') {\n    var promise = new Promise(function (resolve) {\n      storeRef.current.getState().suspendedComponentResolvers.add(resolve);\n    });\n    throw promise;\n  } else if (loadable.state === 'hasError') {\n    throw loadable.contents;\n  } else {\n    throw new Error(\"Invalid value of loadable atom \\\"\".concat(atom.key, \"\\\"\"));\n  }\n}\n\nfunction validateRecoilValue(recoilValue, hookName) {\n  if (!isRecoilValue$2(recoilValue)) {\n    throw new Error(\"Invalid argument to \".concat(hookName, \": expected an atom or selector but got \").concat(String(recoilValue)));\n  }\n}\n\nfunction useRecoilInterface_DEPRECATED() {\n  var storeRef = useStoreRef$1();\n\n  var _useState$ = useState$1([]),\n      _useState$2 = _slicedToArray(_useState$, 2),\n      _ = _useState$2[0],\n      forceUpdate = _useState$2[1];\n\n  var recoilValuesUsed = useRef$1(new Set());\n  recoilValuesUsed.current = new Set(); // Track the RecoilValues used just during this render\n\n  var previousSubscriptions = useRef$1(new Set());\n  var subscriptions = useRef$1(new Map());\n  var unsubscribeFrom = useCallback(function (key) {\n    var sub = subscriptions.current.get(key);\n\n    if (sub) {\n      sub.release(storeRef.current);\n      subscriptions.current.delete(key);\n    }\n  }, [storeRef, subscriptions]);\n  useEffect$1(function () {\n    var store = storeRef.current;\n\n    function updateState(_state, key) {\n      if (!subscriptions.current.has(key)) {\n        return;\n      }\n\n      forceUpdate([]);\n    }\n\n    Recoil_differenceSets(recoilValuesUsed.current, previousSubscriptions.current).forEach(function (key) {\n      if (subscriptions.current.has(key)) {\n        Recoil_expectationViolation(\"Double subscription to RecoilValue \\\"\".concat(key, \"\\\"\"));\n        return;\n      }\n\n      var sub = subscribeToRecoilValue$1(store, new AbstractRecoilValue$2(key), function (state) {\n        Recoil_Tracing.trace('RecoilValue subscription fired', key, function () {\n          updateState(state, key);\n        });\n      });\n      subscriptions.current.set(key, sub);\n      Recoil_Tracing.trace('initial update on subscribing', key, function () {\n        /**\n         * Since we're subscribing in an effect we need to update to the latest\n         * value of the atom since it may have changed since we rendered. We can\n         * go ahead and do that now, unless we're in the middle of a batch --\n         * in which case we should do it at the end of the batch, due to the\n         * following edge case: Suppose an atom is updated in another useEffect\n         * of this same component. Then the following sequence of events occur:\n         * 1. Atom is updated and subs fired (but we may not be subscribed\n         *    yet depending on order of effects, so we miss this) Updated value\n         *    is now in nextTree, but not currentTree.\n         * 2. This effect happens. We subscribe and update.\n         * 3. From the update we re-render and read currentTree, with old value.\n         * 4. Batcher's effect sets currentTree to nextTree.\n         * In this sequence we miss the update. To avoid that, add the update\n         * to queuedComponentCallback if a batch is in progress.\n         */\n        // FIXME delete queuedComponentCallbacks_DEPRECATED when deleting useInterface.\n        var state = store.getState();\n\n        if (state.nextTree) {\n          store.getState().queuedComponentCallbacks_DEPRECATED.push(Recoil_Tracing.wrap(function () {\n            updateState(store.getState(), key);\n          }));\n        } else {\n          updateState(store.getState(), key);\n        }\n      });\n    });\n    Recoil_differenceSets(previousSubscriptions.current, recoilValuesUsed.current).forEach(function (key) {\n      unsubscribeFrom(key);\n    });\n    previousSubscriptions.current = recoilValuesUsed.current;\n  });\n  useEffect$1(function () {\n    var subs = subscriptions.current;\n    return function () {\n      return subs.forEach(function (_, key) {\n        return unsubscribeFrom(key);\n      });\n    };\n  }, [unsubscribeFrom]);\n  return useMemo$1(function () {\n    function useSetRecoilState(recoilState) {\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilState, 'useSetRecoilState');\n      }\n\n      return function (newValueOrUpdater) {\n        setRecoilValue$2(storeRef.current, recoilState, newValueOrUpdater);\n      };\n    }\n\n    function useResetRecoilState(recoilState) {\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilState, 'useResetRecoilState');\n      }\n\n      return function () {\n        return setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2);\n      };\n    }\n\n    function useRecoilValueLoadable(recoilValue) {\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilValue, 'useRecoilValueLoadable');\n      }\n\n      if (!recoilValuesUsed.current.has(recoilValue.key)) {\n        recoilValuesUsed.current = setByAddingToSet$2(recoilValuesUsed.current, recoilValue.key);\n      } // TODO Restore optimization to memoize lookup\n\n\n      return getRecoilValueAsLoadable$2(storeRef.current, recoilValue);\n    }\n\n    function useRecoilValue(recoilValue) {\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilValue, 'useRecoilValue');\n      }\n\n      var loadable = useRecoilValueLoadable(recoilValue);\n      return handleLoadable(loadable, recoilValue, storeRef);\n    }\n\n    function useRecoilState(recoilState) {\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilState, 'useRecoilState');\n      }\n\n      return [useRecoilValue(recoilState), useSetRecoilState(recoilState)];\n    }\n\n    function useRecoilStateLoadable(recoilState) {\n      if (process.env.NODE_ENV !== \"production\") {\n        validateRecoilValue(recoilState, 'useRecoilStateLoadable');\n      }\n\n      return [useRecoilValueLoadable(recoilState), useSetRecoilState(recoilState)];\n    }\n\n    return {\n      getRecoilValue: useRecoilValue,\n      getRecoilValueLoadable: useRecoilValueLoadable,\n      getRecoilState: useRecoilState,\n      getRecoilStateLoadable: useRecoilStateLoadable,\n      getSetRecoilState: useSetRecoilState,\n      getResetRecoilState: useResetRecoilState\n    };\n  }, [recoilValuesUsed, storeRef]);\n}\n\nvar recoilComponentGetRecoilValueCount_FOR_TESTING = {\n  current: 0\n};\n\nfunction useRecoilValueLoadable_MUTABLESOURCE(recoilValue) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilValue, 'useRecoilValueLoadable');\n  }\n\n  var storeRef = useStoreRef$1();\n  var getValue = useCallback(function () {\n    if (process.env.NODE_ENV !== \"production\") {\n      recoilComponentGetRecoilValueCount_FOR_TESTING.current++;\n    }\n\n    return getRecoilValueAsLoadable$2(storeRef.current, recoilValue, storeRef.current.getState().currentTree);\n  }, [storeRef, recoilValue]);\n  var subscribe = useCallback(function (_something, callback) {\n    var store = storeRef.current;\n    var sub = subscribeToRecoilValue$1(store, recoilValue, function () {\n      Recoil_Tracing.trace('RecoilValue subscription fired', recoilValue.key, function () {\n        callback();\n      });\n    });\n    return function () {\n      return sub.release(store);\n    };\n  }, [recoilValue, storeRef]);\n  return useMutableSource(useRecoilMutableSource$1(), getValue, subscribe);\n}\n\nfunction useRecoilValueLoadable_LEGACY(recoilValue) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilValue, 'useRecoilValueLoadable');\n  }\n\n  var storeRef = useStoreRef$1();\n\n  var _useState$3 = useState$1([]),\n      _useState$4 = _slicedToArray(_useState$3, 2),\n      _ = _useState$4[0],\n      forceUpdate = _useState$4[1];\n\n  useEffect$1(function () {\n    var store = storeRef.current;\n    var sub = subscribeToRecoilValue$1(store, recoilValue, function (_state) {\n      Recoil_Tracing.trace('RecoilValue subscription fired', recoilValue.key, function () {\n        forceUpdate([]);\n      });\n    });\n    Recoil_Tracing.trace('initial update on subscribing', recoilValue.key, function () {\n      /**\n       * Since we're subscribing in an effect we need to update to the latest\n       * value of the atom since it may have changed since we rendered. We can\n       * go ahead and do that now, unless we're in the middle of a batch --\n       * in which case we should do it at the end of the batch, due to the\n       * following edge case: Suppose an atom is updated in another useEffect\n       * of this same component. Then the following sequence of events occur:\n       * 1. Atom is updated and subs fired (but we may not be subscribed\n       *    yet depending on order of effects, so we miss this) Updated value\n       *    is now in nextTree, but not currentTree.\n       * 2. This effect happens. We subscribe and update.\n       * 3. From the update we re-render and read currentTree, with old value.\n       * 4. Batcher's effect sets currentTree to nextTree.\n       * In this sequence we miss the update. To avoid that, add the update\n       * to queuedComponentCallback if a batch is in progress.\n       */\n      var state = store.getState();\n\n      if (state.nextTree) {\n        store.getState().queuedComponentCallbacks_DEPRECATED.push(Recoil_Tracing.wrap(function () {\n          forceUpdate([]);\n        }));\n      } else {\n        forceUpdate([]);\n      }\n    });\n    return function () {\n      return sub.release(store);\n    };\n  }, [recoilValue, storeRef]);\n  return getRecoilValueAsLoadable$2(storeRef.current, recoilValue);\n} // FIXME T2710559282599660\n\n\nvar useMutableSource = (_useMutableSource = react.useMutableSource) !== null && _useMutableSource !== void 0 ? _useMutableSource : react.unstable_useMutableSource; // flowlint-line unclear-type:off\n\n/**\n  Like useRecoilValue(), but either returns the value if available or\n  just undefined if not available for any reason, such as pending or error.\n*/\n\nfunction useRecoilValueLoadable(recoilValue) {\n  if (useMutableSource && !(typeof window !== 'undefined' && window.$disableRecoilValueMutableSource_TEMP_HACK_DO_NOT_USE)) {\n    // eslint-disable-next-line fb-www/react-hooks\n    return useRecoilValueLoadable_MUTABLESOURCE(recoilValue);\n  } else {\n    // eslint-disable-next-line fb-www/react-hooks\n    return useRecoilValueLoadable_LEGACY(recoilValue);\n  }\n}\n/**\n  Returns the value represented by the RecoilValue.\n  If the value is pending, it will throw a Promise to suspend the component,\n  if the value is an error it will throw it for the nearest React error boundary.\n  This will also subscribe the component for any updates in the value.\n  */\n\n\nfunction useRecoilValue(recoilValue) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilValue, 'useRecoilValue');\n  }\n\n  var storeRef = useStoreRef$1();\n  var loadable = useRecoilValueLoadable(recoilValue);\n  return handleLoadable(loadable, recoilValue, storeRef);\n}\n/**\n  Returns a function that allows the value of a RecoilState to be updated, but does\n  not subscribe the component to changes to that RecoilState.\n*/\n\n\nfunction useSetRecoilState(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilState, 'useSetRecoilState');\n  }\n\n  var storeRef = useStoreRef$1();\n  return useCallback(function (newValueOrUpdater) {\n    setRecoilValue$2(storeRef.current, recoilState, newValueOrUpdater);\n  }, [storeRef, recoilState]);\n}\n/**\n  Returns a function that will reset the value of a RecoilState to its default\n*/\n\n\nfunction useResetRecoilState(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilState, 'useResetRecoilState');\n  }\n\n  var storeRef = useStoreRef$1();\n  return useCallback(function () {\n    setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2);\n  }, [storeRef, recoilState]);\n}\n/**\n  Equivalent to useState(). Allows the value of the RecoilState to be read and written.\n  Subsequent updates to the RecoilState will cause the component to re-render. If the\n  RecoilState is pending, this will suspend the component and initiate the\n  retrieval of the value. If evaluating the RecoilState resulted in an error, this will\n  throw the error so that the nearest React error boundary can catch it.\n*/\n\n\nfunction useRecoilState(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilState, 'useRecoilState');\n  }\n\n  return [useRecoilValue(recoilState), useSetRecoilState(recoilState)];\n}\n/**\n  Like useRecoilState(), but does not cause Suspense or React error handling. Returns\n  an object that indicates whether the RecoilState is available, pending, or\n  unavailable due to an error.\n*/\n\n\nfunction useRecoilStateLoadable(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateRecoilValue(recoilState, 'useRecoilStateLoadable');\n  }\n\n  return [useRecoilValueLoadable(recoilState), useSetRecoilState(recoilState)];\n}\n\nfunction useTransactionSubscription(callback) {\n  var storeRef = useStoreRef$1();\n  useEffect$1(function () {\n    var sub = storeRef.current.subscribeToTransactions(callback);\n    return sub.release;\n  }, [callback, storeRef]);\n}\n\nfunction externallyVisibleAtomValuesInState(state) {\n  var atomValues = state.atomValues;\n  var persistedAtomContentsValues = Recoil_mapMap(Recoil_filterMap(atomValues, function (v, k) {\n    var node = getNode$2(k);\n    var persistence = node.persistence_UNSTABLE;\n    return persistence != null && persistence.type !== 'none' && v.state === 'hasValue';\n  }), function (v) {\n    return v.contents;\n  }); // Merge in nonvalidated atoms; we may not have defs for them but they will\n  // all have persistence on or they wouldn't be there in the first place.\n\n  return Recoil_mergeMaps(state.nonvalidatedAtoms, persistedAtomContentsValues);\n}\n/**\n  Calls the given callback after any atoms have been modified and the consequent\n  component re-renders have been committed. This is intended for persisting\n  the values of the atoms to storage. The stored values can then be restored\n  using the useSetUnvalidatedAtomValues hook.\n\n  The callback receives the following info:\n\n  atomValues: The current value of every atom that is both persistable (persistence\n              type not set to 'none') and whose value is available (not in an\n              error or loading state).\n\n  previousAtomValues: The value of every persistable and available atom before\n               the transaction began.\n\n  atomInfo: A map containing the persistence settings for each atom. Every key\n            that exists in atomValues will also exist in atomInfo.\n\n  modifiedAtoms: The set of atoms that were written to during the transaction.\n\n  transactionMetadata: Arbitrary information that was added via the\n          useSetUnvalidatedAtomValues hook. Useful for ignoring the useSetUnvalidatedAtomValues\n          transaction, to avoid loops.\n*/\n\n\nfunction useTransactionObservation_DEPRECATED(callback) {\n  useTransactionSubscription(useCallback(function (store) {\n    var previousTree = store.getState().previousTree;\n    var currentTree = store.getState().currentTree;\n\n    if (!previousTree) {\n      Recoil_recoverableViolation('Transaction subscribers notified without a previous tree being present -- this is a bug in Recoil');\n      previousTree = store.getState().currentTree; // attempt to trundle on\n    }\n\n    var atomValues = externallyVisibleAtomValuesInState(currentTree);\n    var previousAtomValues = externallyVisibleAtomValuesInState(previousTree);\n    var atomInfo = Recoil_mapMap(nodes$1, function (node) {\n      var _node$persistence_UNS, _node$persistence_UNS2, _node$persistence_UNS3, _node$persistence_UNS4;\n\n      return {\n        persistence_UNSTABLE: {\n          type: (_node$persistence_UNS = (_node$persistence_UNS2 = node.persistence_UNSTABLE) === null || _node$persistence_UNS2 === void 0 ? void 0 : _node$persistence_UNS2.type) !== null && _node$persistence_UNS !== void 0 ? _node$persistence_UNS : 'none',\n          backButton: (_node$persistence_UNS3 = (_node$persistence_UNS4 = node.persistence_UNSTABLE) === null || _node$persistence_UNS4 === void 0 ? void 0 : _node$persistence_UNS4.backButton) !== null && _node$persistence_UNS3 !== void 0 ? _node$persistence_UNS3 : false\n        }\n      };\n    }); // Filter on existance in atomValues so that externally-visible rules\n    // are also applied to modified atoms (specifically exclude selectors):\n\n    var modifiedAtoms = Recoil_filterSet(currentTree.dirtyAtoms, function (k) {\n      return atomValues.has(k) || previousAtomValues.has(k);\n    });\n    callback({\n      atomValues: atomValues,\n      previousAtomValues: previousAtomValues,\n      atomInfo: atomInfo,\n      modifiedAtoms: modifiedAtoms,\n      transactionMetadata: _objectSpread({}, currentTree.transactionMetadata)\n    });\n  }, [callback]));\n}\n\nfunction useRecoilTransactionObserver(callback) {\n  useTransactionSubscription(useCallback(function (store) {\n    callback({\n      snapshot: cloneSnapshot$1(store, 'current'),\n      previousSnapshot: cloneSnapshot$1(store, 'previous')\n    });\n  }, [callback]));\n} // Return a snapshot of the current state and subscribe to all state changes\n\n\nfunction useRecoilSnapshot() {\n  var storeRef = useStoreRef$1();\n\n  var _useState$5 = useState$1(function () {\n    return cloneSnapshot$1(storeRef.current);\n  }),\n      _useState$6 = _slicedToArray(_useState$5, 2),\n      snapshot = _useState$6[0],\n      setSnapshot = _useState$6[1];\n\n  useTransactionSubscription(useCallback(function (store) {\n    return setSnapshot(cloneSnapshot$1(store));\n  }, []));\n  return snapshot;\n}\n\nfunction useGotoRecoilSnapshot() {\n  var storeRef = useStoreRef$1();\n  return useCallback(function (snapshot) {\n    var _storeState$nextTree;\n\n    var storeState = storeRef.current.getState();\n    var prev = (_storeState$nextTree = storeState.nextTree) !== null && _storeState$nextTree !== void 0 ? _storeState$nextTree : storeState.currentTree;\n    var next = snapshot.getStore_INTERNAL().getState().currentTree;\n    reactDom.unstable_batchedUpdates(function () {\n      var keysToUpdate = new Set();\n\n      for (var _i3 = 0, _arr = [prev.atomValues.keys(), next.atomValues.keys()]; _i3 < _arr.length; _i3++) {\n        var keys = _arr[_i3];\n\n        var _iterator16 = _createForOfIteratorHelper(keys),\n            _step16;\n\n        try {\n          for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n            var key = _step16.value;\n\n            var _prev$atomValues$get, _next$atomValues$get;\n\n            if (((_prev$atomValues$get = prev.atomValues.get(key)) === null || _prev$atomValues$get === void 0 ? void 0 : _prev$atomValues$get.contents) !== ((_next$atomValues$get = next.atomValues.get(key)) === null || _next$atomValues$get === void 0 ? void 0 : _next$atomValues$get.contents) && getNode$2(key).shouldRestoreFromSnapshots) {\n              keysToUpdate.add(key);\n            }\n          }\n        } catch (err) {\n          _iterator16.e(err);\n        } finally {\n          _iterator16.f();\n        }\n      }\n\n      keysToUpdate.forEach(function (key) {\n        setRecoilValueLoadable$1(storeRef.current, new AbstractRecoilValue$2(key), next.atomValues.has(key) ? Recoil_nullthrows(next.atomValues.get(key)) : DEFAULT_VALUE$2);\n      });\n      storeRef.current.replaceState(function (state) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          stateID: snapshot.getID_INTERNAL()\n        });\n      });\n    });\n  }, [storeRef]);\n}\n\nfunction useSetUnvalidatedAtomValues() {\n  var storeRef = useStoreRef$1();\n  return function (values) {\n    var transactionMetadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    reactDom.unstable_batchedUpdates(function () {\n      storeRef.current.addTransactionMetadata(transactionMetadata);\n      values.forEach(function (value, key) {\n        return setUnvalidatedRecoilValue$1(storeRef.current, new AbstractRecoilValue$2(key), value);\n      });\n    });\n  };\n}\n\nvar Sentinel = function Sentinel() {\n  _classCallCheck(this, Sentinel);\n};\n\nvar SENTINEL = new Sentinel();\n\nfunction useRecoilCallback(fn, deps) {\n  var storeRef = useStoreRef$1();\n  var gotoSnapshot = useGotoRecoilSnapshot();\n  return useCallback(function () {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key7 = 0; _key7 < _len6; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    // Use currentTree for the snapshot to show the currently committed state\n    var snapshot = cloneSnapshot$1(storeRef.current);\n\n    function set(recoilState, newValueOrUpdater) {\n      setRecoilValue$2(storeRef.current, recoilState, newValueOrUpdater);\n    }\n\n    function reset(recoilState) {\n      setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2);\n    }\n\n    var ret = SENTINEL;\n    reactDom.unstable_batchedUpdates(function () {\n      // flowlint-next-line unclear-type:off\n      ret = fn({\n        set: set,\n        reset: reset,\n        snapshot: snapshot,\n        gotoSnapshot: gotoSnapshot\n      }).apply(void 0, args);\n    });\n    !!(ret instanceof Sentinel) ? process.env.NODE_ENV !== \"production\" ? Recoil_invariant(false, 'unstable_batchedUpdates should return immediately') : Recoil_invariant(false) : void 0;\n    return ret;\n  }, deps != null ? [].concat(_toConsumableArray(deps), [storeRef]) : undefined // eslint-disable-line fb-www/react-hooks-deps\n  );\n}\n\nvar Recoil_Hooks = {\n  recoilComponentGetRecoilValueCount_FOR_TESTING: recoilComponentGetRecoilValueCount_FOR_TESTING,\n  useGotoRecoilSnapshot: useGotoRecoilSnapshot,\n  useRecoilCallback: useRecoilCallback,\n  useRecoilInterface: useRecoilInterface_DEPRECATED,\n  useRecoilSnapshot: useRecoilSnapshot,\n  useRecoilState: useRecoilState,\n  useRecoilStateLoadable: useRecoilStateLoadable,\n  useRecoilTransactionObserver: useRecoilTransactionObserver,\n  useRecoilValue: useRecoilValue,\n  useRecoilValueLoadable: useRecoilValueLoadable,\n  useResetRecoilState: useResetRecoilState,\n  useSetRecoilState: useSetRecoilState,\n  useSetUnvalidatedAtomValues: useSetUnvalidatedAtomValues,\n  useTransactionObservation_DEPRECATED: useTransactionObservation_DEPRECATED,\n  useTransactionSubscription_DEPRECATED: useTransactionSubscription\n};\nvar useMemo$2 = react.useMemo;\nvar RecoilRoot$1 = Recoil_RecoilRoot_react.RecoilRoot,\n    useStoreRef$2 = Recoil_RecoilRoot_react.useStoreRef;\n\nfunction useRecoilBridgeAcrossReactRoots() {\n  var store = useStoreRef$2().current;\n  return useMemo$2(function () {\n    function RecoilBridge(_ref13) {\n      var children = _ref13.children;\n      return /*#__PURE__*/react.createElement(RecoilRoot$1, {\n        store_INTERNAL: store\n      }, children);\n    }\n\n    return RecoilBridge;\n  }, [store]);\n}\n\nvar Recoil_useRecoilBridgeAcrossReactRoots = useRecoilBridgeAcrossReactRoots;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n// Split declaration and implementation to allow this function to pretend to\n// check for actual instance of Promise instead of something with a `then`\n// method.\n// eslint-disable-next-line no-redeclare\n\nfunction isPromise(p) {\n  return !!p && typeof p.then === 'function';\n}\n\nvar Recoil_isPromise = isPromise; // TODO Convert Loadable to a Class to allow for runtime type detection.\n// Containing static factories of withValue(), withError(), withPromise(), and all()\n\nvar loadableAccessors = {\n  getValue: function getValue() {\n    if (this.state !== 'hasValue') {\n      throw this.contents; // Throw Error, or Promise for the loading state\n    }\n\n    return this.contents;\n  },\n  toPromise: function toPromise() {\n    return this.state === 'hasValue' ? Promise.resolve(this.contents) : this.state === 'hasError' ? Promise.reject(this.contents) : this.contents;\n  },\n  valueMaybe: function valueMaybe() {\n    return this.state === 'hasValue' ? this.contents : undefined;\n  },\n  valueOrThrow: function valueOrThrow() {\n    if (this.state !== 'hasValue') {\n      throw new Error(\"Loadable expected value, but in \\\"\".concat(this.state, \"\\\" state\"));\n    }\n\n    return this.contents;\n  },\n  errorMaybe: function errorMaybe() {\n    return this.state === 'hasError' ? this.contents : undefined;\n  },\n  errorOrThrow: function errorOrThrow() {\n    if (this.state !== 'hasError') {\n      throw new Error(\"Loadable expected error, but in \\\"\".concat(this.state, \"\\\" state\"));\n    }\n\n    return this.contents;\n  },\n  promiseMaybe: function promiseMaybe() {\n    return this.state === 'loading' ? this.contents : undefined;\n  },\n  promiseOrThrow: function promiseOrThrow() {\n    if (this.state !== 'loading') {\n      throw new Error(\"Loadable expected promise, but in \\\"\".concat(this.state, \"\\\" state\"));\n    }\n\n    return this.contents;\n  },\n  // TODO Unit tests\n  // TODO Convert Loadable to a Class to better support chaining\n  //      by returning a Loadable from a map function\n  map: function map(_map) {\n    var _this3 = this;\n\n    if (this.state === 'hasError') {\n      return this;\n    }\n\n    if (this.state === 'hasValue') {\n      try {\n        var next = _map(this.contents); // TODO if next instanceof Loadable, then return next\n\n\n        return Recoil_isPromise(next) ? loadableWithPromise(next) : loadableWithValue(next);\n      } catch (e) {\n        return Recoil_isPromise(e) ? // If we \"suspended\", then try again.\n        // errors and subsequent retries will be handled in 'loading' case\n        loadableWithPromise(e.next(function () {\n          return _map(_this3.contents);\n        })) : loadableWithError(e);\n      }\n    }\n\n    if (this.state === 'loading') {\n      return loadableWithPromise(this.contents // TODO if map returns a loadable, then return the value or promise or throw the error\n      .then(_map).catch(function (e) {\n        if (Recoil_isPromise(e)) {\n          // we were \"suspended,\" try again\n          return e.then(function () {\n            return _map(_this3.contents);\n          });\n        }\n\n        throw e;\n      }));\n    }\n\n    throw new Error('Invalid Loadable state');\n  }\n};\n\nfunction loadableWithValue(value) {\n  // Build objects this way since Flow doesn't support disjoint unions for class properties\n  return Object.freeze(_objectSpread({\n    state: 'hasValue',\n    contents: value\n  }, loadableAccessors));\n}\n\nfunction loadableWithError(error) {\n  return Object.freeze(_objectSpread({\n    state: 'hasError',\n    contents: error\n  }, loadableAccessors));\n}\n\nfunction loadableWithPromise(promise) {\n  return Object.freeze(_objectSpread({\n    state: 'loading',\n    contents: promise\n  }, loadableAccessors));\n}\n\nfunction loadableLoading() {\n  return loadableWithPromise(new Promise(function () {}));\n}\n\nfunction loadableAll(inputs) {\n  return inputs.every(function (i) {\n    return i.state === 'hasValue';\n  }) ? loadableWithValue(inputs.map(function (i) {\n    return i.contents;\n  })) : inputs.some(function (i) {\n    return i.state === 'hasError';\n  }) ? loadableWithError( // $FlowIssue[incompatible-call] #44070740 Array.find should refine parameter\n  Recoil_nullthrows(inputs.find(function (i) {\n    return i.state === 'hasError';\n  }), 'Invalid loadable passed to loadableAll').contents) : loadableWithPromise(Recoil_gkx_1('recoil_async_selector_refactor') ? Promise.all(inputs.map(function (i) {\n    return i.contents;\n  })).then(function (value) {\n    return {\n      value: value\n    };\n  }) : Promise.all(inputs.map(function (i) {\n    return i.contents;\n  })));\n}\n\nvar Recoil_Loadable = {\n  loadableWithValue: loadableWithValue,\n  loadableWithError: loadableWithError,\n  loadableWithPromise: loadableWithPromise,\n  loadableLoading: loadableLoading,\n  loadableAll: loadableAll\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction isNode(object) {\n  var _ownerDocument, _doc$defaultView;\n\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  var doc = object != null ? (_ownerDocument = object.ownerDocument) !== null && _ownerDocument !== void 0 ? _ownerDocument : object : document;\n  var defaultView = (_doc$defaultView = doc.defaultView) !== null && _doc$defaultView !== void 0 ? _doc$defaultView : window;\n  return !!(object != null && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nvar Recoil_isNode = isNode;\n\nfunction shouldNotBeFrozen(value) {\n  // Primitives and functions:\n  if (value === null || typeof value !== 'object') {\n    return true;\n  } // React elements:\n\n\n  switch (typeof value.$$typeof) {\n    case 'symbol':\n      return true;\n\n    case 'number':\n      return true;\n  } // Immutable structures:\n\n\n  if (value['@@__IMMUTABLE_ITERABLE__@@'] != null || value['@@__IMMUTABLE_KEYED__@@'] != null || value['@@__IMMUTABLE_INDEXED__@@'] != null || value['@@__IMMUTABLE_ORDERED__@@'] != null || value['@@__IMMUTABLE_RECORD__@@'] != null) {\n    return true;\n  } // DOM nodes:\n\n\n  if (Recoil_isNode(value)) {\n    return true;\n  }\n\n  if (Recoil_isPromise(value)) {\n    return true;\n  }\n\n  return false;\n} // Recursively freeze a value to enforce it is read-only.\n// This may also have minimal performance improvements for enumerating\n// objects (based on browser implementations, of course)\n\n\nfunction deepFreezeValue(value) {\n  if (typeof value !== 'object' || shouldNotBeFrozen(value)) {\n    return;\n  }\n\n  Object.freeze(value); // Make all properties read-only\n\n  for (var key in value) {\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      var prop = value[key]; // Prevent infinite recurssion for circular references.\n\n      if (typeof prop === 'object' && prop != null && !Object.isFrozen(prop)) {\n        deepFreezeValue(prop);\n      }\n    }\n  }\n\n  Object.seal(value); // This also makes existing properties non-configurable.\n}\n\nvar Recoil_deepFreezeValue = deepFreezeValue;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Implements (a subset of) the interface of built-in Map but supports arrays as\n * keys. Two keys are equal if corresponding elements are equal according to the\n * equality semantics of built-in Map. Operations are at worst O(n*b) where n is\n * the array length and b is the complexity of the built-in operation.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nvar LEAF = Symbol('ArrayKeyedMap');\nvar emptyMap = new Map();\n\nvar ArrayKeyedMap = /*#__PURE__*/function () {\n  // @fb-only: _base: Map<any, any> = new Map();\n  function ArrayKeyedMap(existing) {\n    _classCallCheck(this, ArrayKeyedMap);\n\n    // $FlowOSSFixMe\n    this._base = new Map(); // @oss-only\n\n    if (existing instanceof ArrayKeyedMap) {\n      var _iterator17 = _createForOfIteratorHelper(existing.entries()),\n          _step17;\n\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var _step17$value = _slicedToArray(_step17.value, 2),\n              k = _step17$value[0],\n              v = _step17$value[1];\n\n          this.set(k, v);\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n    } else if (existing) {\n      var _iterator18 = _createForOfIteratorHelper(existing),\n          _step18;\n\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var _step18$value = _slicedToArray(_step18.value, 2),\n              _k = _step18$value[0],\n              _v = _step18$value[1];\n\n          this.set(_k, _v);\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n    }\n\n    return this;\n  }\n\n  _createClass(ArrayKeyedMap, [{\n    key: \"get\",\n    value: function get(key) {\n      var ks = Array.isArray(key) ? key : [key]; // $FlowOSSFixMe\n\n      var map = this._base;\n      ks.forEach(function (k) {\n        var _map$get;\n\n        map = (_map$get = map.get(k)) !== null && _map$get !== void 0 ? _map$get : emptyMap;\n      });\n      return map === undefined ? undefined : map.get(LEAF);\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      var ks = Array.isArray(key) ? key : [key]; // $FlowOSSFixMe\n\n      var map = this._base;\n      var next = map;\n      ks.forEach(function (k) {\n        next = map.get(k);\n\n        if (!next) {\n          next = new Map();\n          map.set(k, next);\n        }\n\n        map = next;\n      });\n      next.set(LEAF, value);\n      return this;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      var ks = Array.isArray(key) ? key : [key]; // $FlowOSSFixMe\n\n      var map = this._base;\n      var next = map;\n      ks.forEach(function (k) {\n        next = map.get(k);\n\n        if (!next) {\n          next = new Map();\n          map.set(k, next);\n        }\n\n        map = next;\n      });\n      next.delete(LEAF); // TODO We could cleanup empty maps\n\n      return this;\n    }\n  }, {\n    key: \"entries\",\n    value: function entries() {\n      var answer = [];\n\n      function recurse(level, prefix) {\n        level.forEach(function (v, k) {\n          if (k === LEAF) {\n            answer.push([prefix, v]);\n          } else {\n            recurse(v, prefix.concat(k));\n          }\n        });\n      } // $FlowOSSFixMe\n\n\n      recurse(this._base, []);\n      return answer.values();\n    }\n  }, {\n    key: \"toBuiltInMap\",\n    value: function toBuiltInMap() {\n      return new Map(this.entries());\n    }\n  }]);\n\n  return ArrayKeyedMap;\n}();\n\nvar Recoil_ArrayKeyedMap = ArrayKeyedMap;\n\nfunction cacheWithReferenceEquality() {\n  return new Recoil_ArrayKeyedMap();\n}\n\nvar Recoil_cacheWithReferenceEquality = cacheWithReferenceEquality;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n *\n * This is a stub for some integration into FB internal stuff\n */\n\nfunction startPerfBlock(_id) {\n  return function () {\n    return null;\n  };\n}\n\nvar Recoil_PerformanceTimings = {\n  startPerfBlock: startPerfBlock\n};\nvar loadableWithError$1 = Recoil_Loadable.loadableWithError,\n    loadableWithPromise$1 = Recoil_Loadable.loadableWithPromise,\n    loadableWithValue$1 = Recoil_Loadable.loadableWithValue;\nvar getNodeLoadable$2 = Recoil_FunctionalCore.getNodeLoadable,\n    peekNodeLoadable$2 = Recoil_FunctionalCore.peekNodeLoadable,\n    setNodeValue$3 = Recoil_FunctionalCore.setNodeValue;\nvar addToDependencyMap$1 = Recoil_Graph.addToDependencyMap,\n    mergeDepsIntoDependencyMap$1 = Recoil_Graph.mergeDepsIntoDependencyMap,\n    saveDependencyMapToStore$3 = Recoil_Graph.saveDependencyMapToStore;\nvar DEFAULT_VALUE$3 = Recoil_Node.DEFAULT_VALUE,\n    RecoilValueNotReady$2 = Recoil_Node.RecoilValueNotReady,\n    registerNode$1 = Recoil_Node.registerNode;\nvar AbstractRecoilValue$3 = Recoil_RecoilValue$1.AbstractRecoilValue;\nvar getRecoilValueAsLoadable$3 = Recoil_RecoilValueInterface.getRecoilValueAsLoadable,\n    isRecoilValue$3 = Recoil_RecoilValueInterface.isRecoilValue,\n    setRecoilValueLoadable$2 = Recoil_RecoilValueInterface.setRecoilValueLoadable;\nvar startPerfBlock$1 = Recoil_PerformanceTimings.startPerfBlock; // flowlint-next-line unclear-type:off\n\nvar emptySet$1 = Object.freeze(new Set());\n\nfunction cacheKeyFromDepValues(depValues) {\n  var answer = [];\n\n  var _iterator19 = _createForOfIteratorHelper(Array.from(depValues.keys()).sort()),\n      _step19;\n\n  try {\n    for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n      var key = _step19.value;\n      var loadable = Recoil_nullthrows(depValues.get(key));\n      answer.push(key);\n      answer.push(loadable.state);\n      answer.push(loadable.contents);\n    }\n  } catch (err) {\n    _iterator19.e(err);\n  } finally {\n    _iterator19.f();\n  }\n\n  return answer;\n}\n\nvar dependencyStack = []; // for detecting circular dependencies.\n\nvar waitingStores = new Map();\n/* eslint-disable no-redeclare */\n\nfunction selector(options) {\n  var key = options.key,\n      get = options.get,\n      cacheImplementation = options.cacheImplementation_UNSTABLE;\n  var set = options.set != null ? options.set : undefined; // flow\n\n  var cache = cacheImplementation !== null && cacheImplementation !== void 0 ? cacheImplementation : Recoil_cacheWithReferenceEquality();\n\n  function initSelector(store) {\n    store.getState().knownSelectors.add(key);\n  }\n\n  function letStoreBeNotifiedWhenAsyncSettles(store, loadable) {\n    if (loadable.state === 'loading') {\n      var stores = waitingStores.get(loadable);\n\n      if (stores === undefined) {\n        waitingStores.set(loadable, stores = new Set());\n      }\n\n      stores.add(store);\n    }\n  }\n\n  function notifyStoresOfSettledAsync(originalLoadable, newLoadable) {\n    var stores = waitingStores.get(originalLoadable);\n\n    if (stores !== undefined) {\n      var _iterator20 = _createForOfIteratorHelper(stores),\n          _step20;\n\n      try {\n        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n          var store = _step20.value;\n          setRecoilValueLoadable$2(store, new AbstractRecoilValue$3(key), newLoadable);\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n\n      waitingStores.delete(originalLoadable);\n    }\n  }\n\n  function putIntoCache(cacheKey, loadable) {\n    if (loadable.state !== 'loading') {\n      // Synchronous result\n      if (process.env.NODE_ENV !== \"production\") {\n        if (!options.dangerouslyAllowMutability === true) {\n          Recoil_deepFreezeValue(loadable.contents);\n        }\n      }\n    } else {\n      // Asynchronous result\n      // When the promise resolves, we need to replace the loading state in the\n      // cache and fire any external subscriptions to re-render with the new value.\n      loadable.contents.then(function (result) {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (!options.dangerouslyAllowMutability === true) {\n            Recoil_deepFreezeValue(result);\n          }\n        }\n\n        var newLoadable = loadableWithValue$1(result); // If the value is now resolved, then update the cache with the new value\n\n        cache = cache.set(cacheKey, newLoadable); // TODO Potential optimization: I think this is updating the cache\n        // with a cacheKey of the dep when it wasn't ready yet.  We could also\n        // theoretically put the result in the cache for a cacheKey with the\n        // dep resolved.  If we had some way of figuring out what that cacheKey was..\n        // Note that this optimization would change the user visible behavior slightly,\n        // see the unit test \"useRecoilState - selector catching promise 2\".\n        // If the user catches and handles pending async dependencies, then returns\n        // a promise that resolves when they are available there is a question if\n        // the result of that promise should be the value of the selector, or if\n        // the selector should re-evaluate when the dependency is available.\n        // If the promise returned and the pending dependency resolve at different\n        // times, then the behaviour is better defined, as in the unit test,\n        // \"useRecoilState - selector catching promise and resolving asynchronously\"\n        // Fire subscriptions to re-render any subscribed components with the new value.\n        // The store uses the CURRENT state, not the old state from which\n        // this was called.  That state likely doesn't have the subscriptions saved yet.\n        // Note that we have to set the value for this key, not just notify\n        // components, so that there will be a new version for useMutableSource.\n\n        notifyStoresOfSettledAsync(loadable, newLoadable);\n        return result;\n      }).catch(function (error) {\n        // TODO Figure out why we are catching promises here versus evaluateSelectorFunction\n        // OH, I see why.  Ok, work on this.\n        if (Recoil_isPromise(error)) {\n          return error;\n        }\n\n        if (process.env.NODE_ENV !== \"production\") {\n          if (!options.dangerouslyAllowMutability === true) {\n            Recoil_deepFreezeValue(error);\n          }\n        } // The async value was rejected with an error.  Update the cache with\n        // the error and fire subscriptions to re-render.\n\n\n        var newLoadable = loadableWithError$1(error);\n        cache = cache.set(cacheKey, newLoadable);\n        notifyStoresOfSettledAsync(loadable, newLoadable);\n        return error;\n      });\n    }\n\n    cache = cache.set(cacheKey, loadable);\n  }\n\n  function getFromCacheOrEvaluate(store, state) {\n    var _store$getGraph$nodeD;\n\n    var dependencyMap = new Map(); // First, get the current deps for this selector\n\n    var currentDeps = (_store$getGraph$nodeD = store.getGraph(state.version).nodeDeps.get(key)) !== null && _store$getGraph$nodeD !== void 0 ? _store$getGraph$nodeD : emptySet$1;\n    var depValues = new Map(Array.from(currentDeps).sort().map(function (depKey) {\n      var _getNodeLoadable$3 = getNodeLoadable$2(store, state, depKey),\n          _getNodeLoadable$4 = _slicedToArray(_getNodeLoadable$3, 2),\n          deps = _getNodeLoadable$4[0],\n          loadable = _getNodeLoadable$4[1];\n\n      mergeDepsIntoDependencyMap$1(deps, dependencyMap);\n      saveDependencyMapToStore$3(dependencyMap, store, state.version);\n      return [depKey, loadable];\n    })); // Always cache and evaluate a selector\n    // It may provide a result even when not all deps are available.\n\n    var cacheKey = cacheKeyFromDepValues(depValues);\n    var cached = cache.get(cacheKey);\n\n    if (cached != null) {\n      letStoreBeNotifiedWhenAsyncSettles(store, cached);\n      return [dependencyMap, cached];\n    } // Cache miss, compute the value\n\n\n    var _evaluateSelectorFunc = evaluateSelectorFunction(store, state),\n        _evaluateSelectorFunc2 = _slicedToArray(_evaluateSelectorFunc, 3),\n        deps = _evaluateSelectorFunc2[0],\n        loadable = _evaluateSelectorFunc2[1],\n        newDepValues = _evaluateSelectorFunc2[2];\n\n    mergeDepsIntoDependencyMap$1(deps, dependencyMap);\n    saveDependencyMapToStore$3(dependencyMap, store, state.version); // Save result in cache\n\n    var newCacheKey = cacheKeyFromDepValues(newDepValues);\n    letStoreBeNotifiedWhenAsyncSettles(store, loadable);\n    putIntoCache(newCacheKey, loadable);\n    return [dependencyMap, loadable];\n  }\n\n  function evaluateSelectorFunction(store, state) {\n    var endPerfBlock = startPerfBlock$1(key);\n    var depValues = new Map(); // key -> value for our deps\n\n    var dependencyMap = new Map(); // node -> nodes, part of overall dep map.\n\n    function getRecoilValue(_ref14) {\n      var depKey = _ref14.key;\n      addToDependencyMap$1(key, depKey, dependencyMap);\n\n      var _getNodeLoadable$5 = getNodeLoadable$2(store, state, depKey),\n          _getNodeLoadable$6 = _slicedToArray(_getNodeLoadable$5, 2),\n          deps = _getNodeLoadable$6[0],\n          loadable = _getNodeLoadable$6[1];\n\n      depValues.set(depKey, loadable);\n      mergeDepsIntoDependencyMap$1(deps, dependencyMap);\n      saveDependencyMapToStore$3(dependencyMap, store, state.version);\n\n      if (loadable.state === 'hasValue') {\n        return loadable.contents;\n      } else {\n        throw loadable.contents; // Promise or error\n      }\n    }\n\n    try {\n      // The big moment!\n      var output = get({\n        get: getRecoilValue\n      }); // TODO Allow user to also return Loadables for improved composability\n\n      var result = isRecoilValue$3(output) ? getRecoilValue(output) : output;\n      var loadable;\n\n      if (!Recoil_isPromise(result)) {\n        // The selector returned a simple synchronous value, so let's use it!\n        endPerfBlock();\n        loadable = loadableWithValue$1(result);\n      } else {\n        // The user returned a promise for an asynchronous selector.  This will\n        // resolve to the proper value of the selector when available.\n        loadable = loadableWithPromise$1(result.finally(endPerfBlock));\n      }\n\n      return [dependencyMap, loadable, depValues];\n    } catch (errorOrDepPromise) {\n      // XXX why was this changed to not use isPromise?\n      var isP = errorOrDepPromise.then !== undefined;\n\n      var _loadable;\n\n      if (!isP) {\n        // There was a synchronous error in the evaluation\n        endPerfBlock();\n        _loadable = loadableWithError$1(errorOrDepPromise);\n      } else {\n        // If an asynchronous dependency was not ready, then return a promise that\n        // will resolve when we finally do have a real value or error for the selector.\n        _loadable = loadableWithPromise$1(errorOrDepPromise.then(function () {\n          // Now that its deps are ready, re-evaluate the selector (and\n          // record any newly-discovered dependencies in the Store):\n          var loadable = getRecoilValueAsLoadable$3(store, new AbstractRecoilValue$3(key));\n\n          if (loadable.state === 'hasError') {\n            throw loadable.contents;\n          } // Either the re-try provided a value, which we will use, or it\n          // got blocked again.  In that case this is a promise and we'll try again.\n\n\n          return loadable.contents;\n        }).finally(endPerfBlock));\n      }\n\n      return [dependencyMap, _loadable, depValues];\n    }\n  }\n\n  function detectCircularDependencies(fn) {\n    if (dependencyStack.includes(key)) {\n      var message = \"Recoil selector has circular dependencies: \".concat(dependencyStack.slice(dependencyStack.indexOf(key)).join(\" \\u2192 \"));\n      return [new Map(), loadableWithError$1(new Error(message))];\n    }\n\n    dependencyStack.push(key);\n\n    try {\n      return fn();\n    } finally {\n      dependencyStack.pop();\n    }\n  }\n\n  function myPeek(store, state) {\n    var _store$getGraph$nodeD2; // First, get the current deps for this selector\n\n\n    var currentDeps = (_store$getGraph$nodeD2 = store.getGraph(state.version).nodeDeps.get(key)) !== null && _store$getGraph$nodeD2 !== void 0 ? _store$getGraph$nodeD2 : emptySet$1;\n    var depValues = new Map(Array.from(currentDeps).sort().map(function (depKey) {\n      return [depKey, peekNodeLoadable$2(store, state, depKey)];\n    }));\n    var cacheDepValues = new Map();\n\n    var _iterator21 = _createForOfIteratorHelper(depValues.entries()),\n        _step21;\n\n    try {\n      for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n        var _step21$value = _slicedToArray(_step21.value, 2),\n            depKey = _step21$value[0],\n            depValue = _step21$value[1];\n\n        if (depValue == null) {\n          return undefined;\n        }\n\n        cacheDepValues.set(depKey, depValue);\n      } // Always cache and evaluate a selector\n      // It may provide a result even when not all deps are available.\n\n    } catch (err) {\n      _iterator21.e(err);\n    } finally {\n      _iterator21.f();\n    }\n\n    var cacheKey = cacheKeyFromDepValues(cacheDepValues);\n    return cache.get(cacheKey);\n  }\n\n  function myGet(store, state) {\n    initSelector(store); // TODO memoize a value if no deps have changed to avoid a cache lookup\n    // Lookup the node value in the cache.  If not there, then compute\n    // the value and update the state with any changed node subscriptions.\n\n    if (process.env.NODE_ENV !== \"production\") {\n      return detectCircularDependencies(function () {\n        return getFromCacheOrEvaluate(store, state);\n      });\n    } else {\n      return getFromCacheOrEvaluate(store, state);\n    }\n  }\n\n  if (set != null) {\n    function mySet(store, state, newValue) {\n      initSelector(store);\n      var dependencyMap = new Map();\n      var writes = new Map();\n\n      function getRecoilValue(_ref15) {\n        var key = _ref15.key;\n\n        var _getNodeLoadable$7 = getNodeLoadable$2(store, state, key),\n            _getNodeLoadable$8 = _slicedToArray(_getNodeLoadable$7, 2),\n            deps = _getNodeLoadable$8[0],\n            loadable = _getNodeLoadable$8[1];\n\n        mergeDepsIntoDependencyMap$1(deps, dependencyMap);\n\n        if (loadable.state === 'hasValue') {\n          return loadable.contents;\n        } else if (loadable.state === 'loading') {\n          throw new RecoilValueNotReady$2(key);\n        } else {\n          throw loadable.contents;\n        }\n      }\n\n      function setRecoilState(recoilState, valueOrUpdater) {\n        var newValue = typeof valueOrUpdater === 'function' ? // cast to any because we can't restrict type S from being a function itself without losing support for opaque types\n        // flowlint-next-line unclear-type:off\n        valueOrUpdater(getRecoilValue(recoilState)) : valueOrUpdater;\n\n        var _setNodeValue$5 = setNodeValue$3(store, state, recoilState.key, newValue),\n            _setNodeValue$6 = _slicedToArray(_setNodeValue$5, 2),\n            deps = _setNodeValue$6[0],\n            upstreamWrites = _setNodeValue$6[1];\n\n        mergeDepsIntoDependencyMap$1(deps, dependencyMap);\n        upstreamWrites.forEach(function (v, k) {\n          return writes.set(k, v);\n        });\n      }\n\n      function resetRecoilState(recoilState) {\n        setRecoilState(recoilState, DEFAULT_VALUE$3);\n      }\n\n      set({\n        set: setRecoilState,\n        get: getRecoilValue,\n        reset: resetRecoilState\n      }, newValue);\n      return [dependencyMap, writes];\n    }\n\n    return registerNode$1({\n      key: key,\n      peek: myPeek,\n      get: myGet,\n      set: mySet,\n      dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n      shouldRestoreFromSnapshots: false\n    });\n  } else {\n    return registerNode$1({\n      key: key,\n      peek: myPeek,\n      get: myGet,\n      dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n      shouldRestoreFromSnapshots: false\n    });\n  }\n}\n/* eslint-enable no-redeclare */\n\n\nvar Recoil_selector_OLD = selector; // const newSelector = require('./Recoil_selector_NEW');\n// type Selector = typeof newSelector;\n// const selector: Selector = gkx('recoil_async_selector_refactor')\n//   ? newSelector\n//   : oldSelector;\n\nvar Recoil_selector = Recoil_selector_OLD; // @fb-only: const {scopedAtom} = require('Recoil_ScopedAtom');\n\nvar loadableWithError$2 = Recoil_Loadable.loadableWithError,\n    loadableWithPromise$2 = Recoil_Loadable.loadableWithPromise,\n    loadableWithValue$2 = Recoil_Loadable.loadableWithValue;\nvar DEFAULT_VALUE$4 = Recoil_Node.DEFAULT_VALUE,\n    DefaultValue$2 = Recoil_Node.DefaultValue,\n    registerNode$2 = Recoil_Node.registerNode;\nvar isRecoilValue$4 = Recoil_RecoilValue$1.isRecoilValue;\nvar markRecoilValueModified$1 = Recoil_RecoilValueInterface.markRecoilValueModified,\n    setRecoilValue$3 = Recoil_RecoilValueInterface.setRecoilValue,\n    setRecoilValueLoadable$3 = Recoil_RecoilValueInterface.setRecoilValueLoadable;\n\nfunction baseAtom(options) {\n  var key = options.key,\n      persistence = options.persistence_UNSTABLE;\n  var defaultLoadable = Recoil_isPromise(options.default) ? loadableWithPromise$2(options.default.then(function (value) {\n    defaultLoadable = loadableWithValue$2(value); // TODO Temporary disable Flow due to pending selector_NEW refactor\n\n    return value;\n  }).catch(function (error) {\n    defaultLoadable = loadableWithError$2(error);\n    throw error;\n  })) : loadableWithValue$2(options.default);\n  var cachedAnswerForUnvalidatedValue = undefined;\n\n  function wrapPendingPromise(store, promise) {\n    var wrappedPromise = promise.then(function (value) {\n      var _store$getState$nextT, _state$atomValues$get;\n\n      var state = (_store$getState$nextT = store.getState().nextTree) !== null && _store$getState$nextT !== void 0 ? _store$getState$nextT : store.getState().currentTree;\n\n      if (((_state$atomValues$get = state.atomValues.get(key)) === null || _state$atomValues$get === void 0 ? void 0 : _state$atomValues$get.contents) === wrappedPromise) {\n        setRecoilValue$3(store, node, value);\n      }\n\n      return value;\n    }).catch(function (error) {\n      var _store$getState$nextT2, _state$atomValues$get2;\n\n      var state = (_store$getState$nextT2 = store.getState().nextTree) !== null && _store$getState$nextT2 !== void 0 ? _store$getState$nextT2 : store.getState().currentTree;\n\n      if (((_state$atomValues$get2 = state.atomValues.get(key)) === null || _state$atomValues$get2 === void 0 ? void 0 : _state$atomValues$get2.contents) === wrappedPromise) {\n        setRecoilValueLoadable$3(store, node, loadableWithError$2(error));\n      }\n\n      throw error;\n    });\n    return wrappedPromise;\n  }\n\n  function initAtom(store, initState, trigger) {\n    if (store.getState().knownAtoms.has(key)) {\n      return;\n    }\n\n    store.getState().knownAtoms.add(key); // Setup async defaults to notify subscribers when they resolve\n\n    if (defaultLoadable.state === 'loading') {\n      function notifyDefaultSubscribers() {\n        var _store$getState$nextT3;\n\n        var state = (_store$getState$nextT3 = store.getState().nextTree) !== null && _store$getState$nextT3 !== void 0 ? _store$getState$nextT3 : store.getState().currentTree;\n\n        if (!state.atomValues.has(key)) {\n          markRecoilValueModified$1(store, node);\n        }\n      }\n\n      defaultLoadable.contents.then(notifyDefaultSubscribers).catch(notifyDefaultSubscribers);\n    } // Run Atom Effects\n\n\n    var initValue = DEFAULT_VALUE$4;\n\n    if (options.effects_UNSTABLE != null) {\n      var duringInit = true;\n\n      function setSelf(valueOrUpdater) {\n        if (duringInit) {\n          var currentValue = initValue instanceof DefaultValue$2 || Recoil_isPromise(initValue) ? defaultLoadable.state === 'hasValue' ? defaultLoadable.contents : DEFAULT_VALUE$4 : initValue;\n          initValue = typeof valueOrUpdater === 'function' ? // cast to any because we can't restrict type from being a function itself without losing support for opaque types\n          // flowlint-next-line unclear-type:off\n          valueOrUpdater(currentValue) : valueOrUpdater;\n        } else {\n          if (Recoil_isPromise(valueOrUpdater)) {\n            throw new Error('Setting atoms to async values is not implemented.');\n          }\n\n          setRecoilValue$3(store, node, valueOrUpdater);\n        }\n      }\n\n      var resetSelf = function resetSelf() {\n        return setSelf(DEFAULT_VALUE$4);\n      };\n\n      function onSet(handler) {\n        store.subscribeToTransactions(function (currentStore) {\n          var _currentStore$getStat = currentStore.getState(),\n              currentTree = _currentStore$getStat.currentTree,\n              previousTree = _currentStore$getStat.previousTree;\n\n          if (!previousTree) {\n            Recoil_recoverableViolation('Transaction subscribers notified without a next tree being present -- this is a bug in Recoil');\n            previousTree = currentTree; // attempt to trundle on\n          }\n\n          var newLoadable = currentTree.atomValues.get(key);\n\n          if (newLoadable == null || newLoadable.state === 'hasValue') {\n            var _previousTree$atomVal;\n\n            var newValue = newLoadable != null ? newLoadable.contents : DEFAULT_VALUE$4;\n            var oldLoadable = (_previousTree$atomVal = previousTree.atomValues.get(key)) !== null && _previousTree$atomVal !== void 0 ? _previousTree$atomVal : defaultLoadable;\n            var oldValue = oldLoadable.state === 'hasValue' ? oldLoadable.contents : DEFAULT_VALUE$4; // TODO This isn't actually valid, use as a placeholder for now.\n\n            handler(newValue, oldValue);\n          }\n        }, key);\n      }\n\n      var _iterator22 = _createForOfIteratorHelper((_options$effects_UNST = options.effects_UNSTABLE) !== null && _options$effects_UNST !== void 0 ? _options$effects_UNST : []),\n          _step22;\n\n      try {\n        for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n          var effect = _step22.value;\n\n          var _options$effects_UNST;\n\n          effect({\n            node: node,\n            trigger: trigger,\n            setSelf: setSelf,\n            resetSelf: resetSelf,\n            onSet: onSet\n          });\n        }\n      } catch (err) {\n        _iterator22.e(err);\n      } finally {\n        _iterator22.f();\n      }\n\n      duringInit = false;\n    } // Mutate initial state in place since we know there are no other subscribers\n    // since we are the ones initializing on first use.\n\n\n    if (!(initValue instanceof DefaultValue$2)) {\n      initState.atomValues.set(key, Recoil_isPromise(initValue) ? // TODO Temp disable Flow due to pending selector_NEW refactor using LoadablePromise\n      loadableWithPromise$2(wrapPendingPromise(store, initValue)) : loadableWithValue$2(initValue));\n    }\n  }\n\n  function myPeek(_store, state) {\n    var _ref, _state$atomValues$get3, _cachedAnswerForUnval;\n\n    return (_ref = (_state$atomValues$get3 = state.atomValues.get(key)) !== null && _state$atomValues$get3 !== void 0 ? _state$atomValues$get3 : (_cachedAnswerForUnval = cachedAnswerForUnvalidatedValue) === null || _cachedAnswerForUnval === void 0 ? void 0 : _cachedAnswerForUnval[1]) !== null && _ref !== void 0 ? _ref : defaultLoadable;\n  }\n\n  function myGet(store, state) {\n    initAtom(store, state, 'get');\n\n    if (state.atomValues.has(key)) {\n      // Atom value is stored in state:\n      return [new Map(), Recoil_nullthrows(state.atomValues.get(key))];\n    } else if (state.nonvalidatedAtoms.has(key)) {\n      // Atom value is stored but needs validation before use.\n      // We might have already validated it and have a cached validated value:\n      if (cachedAnswerForUnvalidatedValue != null) {\n        return cachedAnswerForUnvalidatedValue;\n      }\n\n      if (persistence == null) {\n        Recoil_expectationViolation(\"Tried to restore a persisted value for atom \".concat(key, \" but it has no persistence settings.\"));\n        return [new Map(), defaultLoadable];\n      }\n\n      var nonvalidatedValue = state.nonvalidatedAtoms.get(key);\n      var validatorResult = persistence.validator(nonvalidatedValue, DEFAULT_VALUE$4);\n      var validatedValueLoadable = validatorResult instanceof DefaultValue$2 ? defaultLoadable : loadableWithValue$2(validatorResult);\n      cachedAnswerForUnvalidatedValue = [new Map(), validatedValueLoadable];\n      return cachedAnswerForUnvalidatedValue;\n    } else {\n      return [new Map(), defaultLoadable];\n    }\n  }\n\n  function invalidate() {\n    cachedAnswerForUnvalidatedValue = undefined;\n  }\n\n  function mySet(store, state, newValue) {\n    initAtom(store, state, 'set'); // Bail out if we're being set to the existing value, or if we're being\n    // reset but have no stored value (validated or unvalidated) to reset from:\n\n    if (state.atomValues.has(key)) {\n      var existing = Recoil_nullthrows(state.atomValues.get(key));\n\n      if (existing.state === 'hasValue' && newValue === existing.contents) {\n        return [new Map(), new Map()];\n      }\n    } else if (!state.nonvalidatedAtoms.has(key) && newValue instanceof DefaultValue$2) {\n      return [new Map(), new Map()];\n    }\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (options.dangerouslyAllowMutability !== true) {\n        Recoil_deepFreezeValue(newValue);\n      }\n    }\n\n    cachedAnswerForUnvalidatedValue = undefined; // can be released now if it was previously in use\n\n    return [new Map(), new Map().set(key, loadableWithValue$2(newValue))];\n  }\n\n  var node = registerNode$2({\n    key: key,\n    peek: myPeek,\n    get: myGet,\n    set: mySet,\n    invalidate: invalidate,\n    dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n    persistence_UNSTABLE: options.persistence_UNSTABLE ? {\n      type: options.persistence_UNSTABLE.type,\n      backButton: options.persistence_UNSTABLE.backButton\n    } : undefined,\n    shouldRestoreFromSnapshots: true\n  });\n  return node;\n} // prettier-ignore\n\n\nfunction atom(options) {\n  var optionsDefault = options.default,\n      restOptions = _objectWithoutProperties(options, [\"default\"]);\n\n  if (isRecoilValue$4(optionsDefault) // Continue to use atomWithFallback for promise defaults for scoped atoms\n  // for now, since scoped atoms don't support async defaults\n  // @fb-only: || (isPromise(optionsDefault) && scopeRules_APPEND_ONLY_READ_THE_DOCS)\n  ) {\n      return atomWithFallback(_objectSpread(_objectSpread({}, restOptions), {}, {\n        default: optionsDefault // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,\n\n      })); // @fb-only: } else if (scopeRules_APPEND_ONLY_READ_THE_DOCS && !isPromise(optionsDefault)) {\n      // @fb-only: return scopedAtom<T>({\n      // @fb-only: ...restOptions,\n      // @fb-only: default: optionsDefault,\n      // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,\n      // @fb-only: });\n    } else {\n    return baseAtom(_objectSpread(_objectSpread({}, restOptions), {}, {\n      default: optionsDefault\n    }));\n  }\n}\n\nfunction atomWithFallback(options) {\n  var base = atom(_objectSpread(_objectSpread({}, options), {}, {\n    default: DEFAULT_VALUE$4,\n    persistence_UNSTABLE: options.persistence_UNSTABLE === undefined ? undefined : _objectSpread(_objectSpread({}, options.persistence_UNSTABLE), {}, {\n      validator: function validator(storedValue) {\n        return storedValue instanceof DefaultValue$2 ? storedValue : Recoil_nullthrows(options.persistence_UNSTABLE).validator(storedValue, DEFAULT_VALUE$4);\n      }\n    }),\n    // TODO Hack for now.\n    // flowlint-next-line unclear-type: off\n    effects_UNSTABLE: options.effects_UNSTABLE\n  }));\n  return Recoil_selector({\n    key: \"\".concat(options.key, \"__withFallback\"),\n    get: function get(_ref16) {\n      var _get = _ref16.get;\n\n      var baseValue = _get(base);\n\n      return baseValue instanceof DefaultValue$2 ? options.default : baseValue;\n    },\n    set: function set(_ref17, newValue) {\n      var _set = _ref17.set;\n      return _set(base, newValue);\n    },\n    dangerouslyAllowMutability: options.dangerouslyAllowMutability\n  });\n}\n\nvar Recoil_atom = atom;\nvar TIME_WARNING_THRESHOLD_MS = 15;\n\nfunction stringify(x, opt, key) {\n  // A optimization to avoid the more expensive JSON.stringify() for simple strings\n  // This may lose protection for u2028 and u2029, though.\n  if (typeof x === 'string' && !x.includes('\"') && !x.includes('\\\\')) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  } // Handle primitive types\n\n\n  switch (typeof x) {\n    case 'undefined':\n      return '';\n    // JSON.stringify(undefined) returns undefined, but we always want to return a string\n\n    case 'boolean':\n      return x ? 'true' : 'false';\n\n    case 'number':\n    case 'symbol':\n      // case 'bigint': // BigInt is not supported in www\n      return String(x);\n\n    case 'string':\n      // Add surrounding quotes and escape internal quotes\n      return JSON.stringify(x);\n\n    case 'function':\n      if ((opt === null || opt === void 0 ? void 0 : opt.allowFunctions) !== true) {\n        throw new Error('Attempt to serialize function in a Recoil cache key');\n      }\n\n      return \"__FUNCTION(\".concat(x.name, \")__\");\n  }\n\n  if (x === null) {\n    return 'null';\n  } // Fallback case for unknown types\n\n\n  if (typeof x !== 'object') {\n    var _JSON$stringify;\n\n    return (_JSON$stringify = JSON.stringify(x)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : '';\n  } // Deal with all promises as equivalent for now.\n\n\n  if (Recoil_isPromise(x)) {\n    return '__PROMISE__';\n  } // Arrays handle recursive stringification\n\n\n  if (Array.isArray(x)) {\n    return \"[\".concat(x.map(function (v, i) {\n      return stringify(v, opt, i.toString());\n    }), \"]\");\n  } // If an object defines a toJSON() method, then use that to override the\n  // serialization.  This matches the behavior of JSON.stringify().\n  // Pass the key for compatibility.\n  // Immutable.js collections define this method to allow us to serialize them.\n\n\n  if (typeof x.toJSON === 'function') {\n    // flowlint-next-line unclear-type: off\n    return stringify(x.toJSON(key), opt, key);\n  } // For built-in Maps, sort the keys in a stable order instead of the\n  // default insertion order.  Support non-string keys.\n\n\n  if (x instanceof Map) {\n    var obj = {};\n\n    var _iterator23 = _createForOfIteratorHelper(x),\n        _step23;\n\n    try {\n      for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n        var _step23$value = _slicedToArray(_step23.value, 2),\n            k = _step23$value[0],\n            v = _step23$value[1];\n\n        // Stringify will escape any nested quotes\n        obj[typeof k === 'string' ? k : stringify(k, opt)] = v;\n      }\n    } catch (err) {\n      _iterator23.e(err);\n    } finally {\n      _iterator23.f();\n    }\n\n    return stringify(obj, opt, key);\n  } // For built-in Sets, sort the keys in a stable order instead of the\n  // default insertion order.\n\n\n  if (x instanceof Set) {\n    return stringify(Array.from(x).sort(function (a, b) {\n      return stringify(a, opt).localeCompare(stringify(b, opt));\n    }), opt, key);\n  } // Anything else that is iterable serialize as an Array.\n\n\n  if (x[Symbol.iterator] != null && typeof x[Symbol.iterator] === 'function') {\n    // flowlint-next-line unclear-type: off\n    return stringify(Array.from(x), opt, key);\n  } // For all other Objects, sort the keys in a stable order.\n\n\n  return \"{\".concat(Object.keys(x).filter(function (key) {\n    return x[key] !== undefined;\n  }).sort() // stringify the key to add quotes and escape any nested slashes or quotes.\n  .map(function (key) {\n    return \"\".concat(stringify(key, opt), \":\").concat(stringify(x[key], opt, key));\n  }).join(','), \"}\");\n} // Utility similar to JSON.stringify() except:\n// * Serialize built-in Sets as an Array\n// * Serialize built-in Maps as an Object.  Supports non-string keys.\n// * Serialize other iterables as arrays\n// * Sort the keys of Objects and Maps to have a stable order based on string conversion.\n//    This overrides their default insertion order.\n// * Still uses toJSON() of any object to override serialization\n// * Support Symbols (though don't guarantee uniqueness)\n// * We could support BigInt, but Flow doesn't seem to like it.\n// See Recoil_stableStringify-test.js for examples\n\n\nfunction stableStringify(x) {\n  var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    allowFunctions: false\n  };\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof window !== 'undefined') {\n      var startTime = window.performance ? window.performance.now() : 0;\n      var str = stringify(x, opt);\n      var endTime = window.performance ? window.performance.now() : 0;\n\n      if (endTime - startTime > TIME_WARNING_THRESHOLD_MS) {\n        /* eslint-disable fb-www/no-console */\n        console.groupCollapsed(\"Recoil: Spent \".concat(endTime - startTime, \"ms computing a cache key\"));\n        console.warn(x, str);\n        console.groupEnd();\n        /* eslint-enable fb-www/no-console */\n      }\n\n      return str;\n    }\n  }\n\n  return stringify(x, opt);\n}\n\nvar Recoil_stableStringify = stableStringify; // If we do profile and find the key equality check is expensive,\n// we could always try to optimize..  Something that comes to mind is having\n// each check assign an incrementing index to each reference that maps to the\n// value equivalency.  Then, if an object already has an index, the comparison\n// check/lookup would be trivial and the string serialization would only need\n// to be done once per object instance.  Just a thought..\n// Cache implementation to use value equality for keys instead of the default\n// reference equality.  This allows different instances of dependency values to\n// be used.  Normally this is not needed, as dependent atoms/selectors will\n// themselves be cached and always return the same instance.  However, if\n// different params or upstream values for those dependencies could produce\n// equivalent values or they have a custom cache implementation, then this\n// implementation may be needed.  The downside with this approach is that it\n// takes longer to compute the value equivalence vs simple reference equality.\n\nfunction cacheWithValueEquality() {\n  var map = new Map();\n  var cache = {\n    get: function get(key) {\n      return map.get(Recoil_stableStringify(key));\n    },\n    set: function set(key, value) {\n      map.set(Recoil_stableStringify(key), value);\n      return cache;\n    },\n    map: map // For debugging\n\n  };\n  return cache;\n}\n\nvar Recoil_cacheWithValueEquality = cacheWithValueEquality; // Keep in mind the parameter needs to be serializable as a cahche key\n// using Recoil_stableStringify\n// Add a unique index to each selector in case the cache implementation allows\n// duplicate keys based on equivalent stringified parameters\n\nvar nextIndex = 0;\n/* eslint-disable no-redeclare */\n// Return a function that returns members of a family of selectors of the same type\n// E.g.,\n//\n// const s = selectorFamily(...);\n// s({a: 1}) => a selector\n// s({a: 2}) => a different selector\n//\n// By default, the selectors are distinguished by distinct values of the\n// parameter based on value equality, not reference equality.  This allows using\n// object literals or other equivalent objects at callsites to not create\n// duplicate cache entries.  This behavior may be overridden with the\n// cacheImplementationForParams option.\n\nfunction selectorFamily(options) {\n  var _options$cacheImpleme, _options$cacheImpleme2;\n\n  var selectorCache = (_options$cacheImpleme = (_options$cacheImpleme2 = options.cacheImplementationForParams_UNSTABLE) === null || _options$cacheImpleme2 === void 0 ? void 0 : _options$cacheImpleme2.call(options)) !== null && _options$cacheImpleme !== void 0 ? _options$cacheImpleme : Recoil_cacheWithValueEquality();\n  return function (params) {\n    var _stableStringify, _options$cacheImpleme3;\n\n    var cachedSelector = selectorCache.get(params);\n\n    if (cachedSelector != null) {\n      return cachedSelector;\n    }\n\n    var myKey = \"\".concat(options.key, \"__selectorFamily/\").concat((_stableStringify = Recoil_stableStringify(params, {\n      // It is possible to use functions in parameters if the user uses\n      // a cache with reference equality thanks to the incrementing index.\n      allowFunctions: true\n    })) !== null && _stableStringify !== void 0 ? _stableStringify : 'void', \"/\").concat(nextIndex++); // Append index in case values serialize to the same key string\n\n    var myGet = function myGet(callbacks) {\n      return options.get(params)(callbacks);\n    };\n\n    var myCacheImplementation = (_options$cacheImpleme3 = options.cacheImplementation_UNSTABLE) === null || _options$cacheImpleme3 === void 0 ? void 0 : _options$cacheImpleme3.call(options);\n    var newSelector;\n\n    if (options.set != null) {\n      var set = options.set;\n\n      var mySet = function mySet(callbacks, newValue) {\n        return set(params)(callbacks, newValue);\n      };\n\n      newSelector = Recoil_selector({\n        key: myKey,\n        get: myGet,\n        set: mySet,\n        cacheImplementation_UNSTABLE: myCacheImplementation,\n        dangerouslyAllowMutability: options.dangerouslyAllowMutability\n      });\n    } else {\n      newSelector = Recoil_selector({\n        key: myKey,\n        get: myGet,\n        cacheImplementation_UNSTABLE: myCacheImplementation,\n        dangerouslyAllowMutability: options.dangerouslyAllowMutability\n      });\n    }\n\n    selectorCache = selectorCache.set(params, newSelector);\n    return newSelector;\n  };\n}\n/* eslint-enable no-redeclare */\n\n\nvar Recoil_selectorFamily = selectorFamily; // @fb-only: const {parameterizedScopedAtomLegacy} = require('Recoil_ScopedAtom');\n\nvar DEFAULT_VALUE$5 = Recoil_Node.DEFAULT_VALUE,\n    DefaultValue$3 = Recoil_Node.DefaultValue;\n/*\nA function which returns an atom based on the input parameter.\n\nEach unique parameter returns a unique atom. E.g.,\n\n  const f = atomFamily(...);\n  f({a: 1}) => an atom\n  f({a: 2}) => a different atom\n\nThis allows components to persist local, private state using atoms.  Each\ninstance of the component may have a different key, which it uses as the\nparameter for a family of atoms; in this way, each component will have\nits own atom not shared by other instances.  These state keys may be composed\ninto children's state keys as well.\n*/\n\nfunction atomFamily(options) {\n  var atomCache = Recoil_cacheWithValueEquality(); // An atom to represent any legacy atoms that we can upgrade to an atomFamily\n\n  var legacyAtomOptions = {\n    key: options.key,\n    // Legacy atoms just used the plain key directly\n    default: DEFAULT_VALUE$5,\n    persistence_UNSTABLE: options.persistence_UNSTABLE\n  };\n  var legacyAtom; // prettier-ignore\n  // @fb-only: if (\n  // @fb-only: options.scopeRules_APPEND_ONLY_READ_THE_DOCS\n  // @fb-only: ) {\n  // @fb-only: legacyAtom = parameterizedScopedAtomLegacy<T | DefaultValue, P>({\n  // @fb-only: ...legacyAtomOptions,\n  // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS:\n  // @fb-only: options.scopeRules_APPEND_ONLY_READ_THE_DOCS,\n  // @fb-only: });\n  // @fb-only: } else {\n\n  legacyAtom = Recoil_atom(legacyAtomOptions); // @fb-only: }\n  // Selector to calculate the default value based on any persisted legacy atoms\n  // that were upgraded to a atomFamily\n\n  var atomFamilyDefault = Recoil_selectorFamily({\n    key: \"\".concat(options.key, \"__atomFamily/Default\"),\n    get: function get(param) {\n      return function (_ref18) {\n        var get = _ref18.get;\n        var legacyValue = get(typeof legacyAtom === 'function' ? legacyAtom(param) : legacyAtom); // Atom was upgraded from a non-parameterized atom\n\n        if (!(legacyValue instanceof DefaultValue$3)) {\n          return legacyValue;\n        } // There's no legacy atom value, so use the user-specified default\n\n\n        return typeof options.default === 'function' ? // The default was parameterized\n        // Flow doesn't know that T isn't a function, so we need to case to any\n        options.default(param) // flowlint-line unclear-type:off\n        : // Default may be a static value, promise, or RecoilValue\n        options.default;\n      };\n    },\n    dangerouslyAllowMutability: options.dangerouslyAllowMutability\n  }); // Simple atomFamily implementation to cache individual atoms based\n  // on the parameter value equality.\n\n  return function (params) {\n    var _stableStringify;\n\n    var cachedAtom = atomCache.get(params);\n\n    if (cachedAtom != null) {\n      return cachedAtom;\n    }\n\n    var newAtom = Recoil_atom(_objectSpread(_objectSpread({}, options), {}, {\n      key: \"\".concat(options.key, \"__\").concat((_stableStringify = Recoil_stableStringify(params)) !== null && _stableStringify !== void 0 ? _stableStringify : 'void'),\n      default: atomFamilyDefault(params),\n      effects_UNSTABLE: typeof options.effects_UNSTABLE === 'function' ? options.effects_UNSTABLE(params) : options.effects_UNSTABLE // prettier-ignore\n      // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS: mapScopeRules(\n      // @fb-only: options.scopeRules_APPEND_ONLY_READ_THE_DOCS,\n      // @fb-only: params,\n      // @fb-only: )\n\n    }));\n    atomCache = atomCache.set(params, newAtom);\n    return newAtom;\n  };\n}\n\nvar Recoil_atomFamily = atomFamily; // flowlint-next-line unclear-type:off\n\nvar constantSelector = Recoil_selectorFamily({\n  key: '__constant',\n  get: function get(constant) {\n    return function () {\n      return constant;\n    };\n  },\n  cacheImplementationForParams_UNSTABLE: Recoil_cacheWithReferenceEquality\n}); // Function that returns a selector which always produces the\n// same constant value.  It may be called multiple times with the\n// same value, based on reference equality, and will provide the\n// same selector.\n\nfunction constSelector(constant) {\n  return constantSelector(constant);\n}\n\nvar Recoil_constSelector = constSelector; // flowlint-next-line unclear-type:off\n\nvar throwingSelector = Recoil_selectorFamily({\n  key: '__error',\n  get: function get(message) {\n    return function () {\n      throw new Error(message);\n    };\n  },\n  cacheImplementationForParams_UNSTABLE: Recoil_cacheWithReferenceEquality\n}); // Function that returns a selector which always throws an error\n// with the provided message.\n\nfunction errorSelector(message) {\n  return throwingSelector(message);\n}\n\nvar Recoil_errorSelector = errorSelector;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Wraps another recoil value and prevents writing to it.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction readOnlySelector(atom) {\n  // flowlint-next-line unclear-type: off\n  return atom;\n}\n\nvar Recoil_readOnlySelector = readOnlySelector;\nvar loadableWithError$3 = Recoil_Loadable.loadableWithError,\n    loadableWithPromise$3 = Recoil_Loadable.loadableWithPromise,\n    loadableWithValue$3 = Recoil_Loadable.loadableWithValue; /////////////////\n//  TRUTH TABLE\n/////////////////\n// Dependencies        waitForNone         waitForAny        waitForAll\n//  [loading, loading]  [Promise, Promise]  Promise           Promise\n//  [value, loading]    [value, Promise]    [value, Promise]  Promise\n//  [value, value]      [value, value]      [value, value]    [value, value]\n//\n//  [error, loading]    [Error, Promise]    Promise           Error\n//  [error, error]      [Error, Error]      Error             Error\n//  [value, error]      [value, Error]      [value, Error]    Error\n// Issue parallel requests for all dependencies and return the current\n// status if they have results, have some error, or are still pending.\n\nfunction concurrentRequests(getRecoilValue, deps) {\n  var results = Array(deps.length).fill(undefined);\n  var exceptions = Array(deps.length).fill(undefined);\n\n  var _iterator24 = _createForOfIteratorHelper(deps.entries()),\n      _step24;\n\n  try {\n    for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n      var _step24$value = _slicedToArray(_step24.value, 2),\n          i = _step24$value[0],\n          dep = _step24$value[1];\n\n      try {\n        results[i] = getRecoilValue(dep);\n      } catch (e) {\n        // exceptions can either be Promises of pending results or real errors\n        exceptions[i] = e;\n      }\n    }\n  } catch (err) {\n    _iterator24.e(err);\n  } finally {\n    _iterator24.f();\n  }\n\n  return [results, exceptions];\n}\n\nfunction isError(exp) {\n  return exp != null && !Recoil_isPromise(exp);\n}\n\nfunction unwrapDependencies(dependencies) {\n  return Array.isArray(dependencies) ? dependencies : Object.getOwnPropertyNames(dependencies).map(function (key) {\n    return dependencies[key];\n  });\n}\n\nfunction getValueFromLoadablePromiseResult(result) {\n  if (result.hasOwnProperty('value')) {\n    return result.value;\n  }\n\n  return result;\n}\n\nfunction wrapResults(dependencies, results) {\n  return Array.isArray(dependencies) ? results : // Object.getOwnPropertyNames() has consistent key ordering with ES6\n  Object.getOwnPropertyNames(dependencies).reduce(function (out, key, idx) {\n    return _objectSpread(_objectSpread({}, out), {}, _defineProperty2({}, key, results[idx]));\n  }, {});\n}\n\nfunction wrapLoadables(dependencies, results, exceptions) {\n  var output = exceptions.map(function (exception, idx) {\n    return exception == null ? loadableWithValue$3(results[idx]) : Recoil_isPromise(exception) ? loadableWithPromise$3(exception) : loadableWithError$3(exception);\n  });\n  return wrapResults(dependencies, output);\n} // Selector that requests all dependencies in parallel and immediately returns\n// current results without waiting.\n\n\nvar waitForNone = Recoil_selectorFamily({\n  key: '__waitForNone',\n  get: function get(dependencies) {\n    return function (_ref19) {\n      var get = _ref19.get;\n      // Issue requests for all dependencies in parallel.\n      var deps = unwrapDependencies(dependencies);\n\n      var _concurrentRequests = concurrentRequests(get, deps),\n          _concurrentRequests2 = _slicedToArray(_concurrentRequests, 2),\n          results = _concurrentRequests2[0],\n          exceptions = _concurrentRequests2[1]; // Always return the current status of the results; never block.\n\n\n      return wrapLoadables(dependencies, results, exceptions);\n    };\n  }\n}); // Selector that requests all dependencies in parallel and waits for at least\n// one to be available before returning results.  It will only error if all\n// dependencies have errors.\n\nvar waitForAny = Recoil_selectorFamily({\n  key: '__waitForAny',\n  get: function get(dependencies) {\n    return function (_ref20) {\n      var get = _ref20.get;\n      // Issue requests for all dependencies in parallel.\n      // Exceptions can either be Promises of pending results or real errors\n      var deps = unwrapDependencies(dependencies);\n\n      var _concurrentRequests3 = concurrentRequests(get, deps),\n          _concurrentRequests4 = _slicedToArray(_concurrentRequests3, 2),\n          results = _concurrentRequests4[0],\n          exceptions = _concurrentRequests4[1]; // If any results are available, return the current status\n\n\n      if (exceptions.some(function (exp) {\n        return exp == null;\n      })) {\n        return wrapLoadables(dependencies, results, exceptions);\n      } // Since we are waiting for any results, only throw an error if all\n      // dependencies have an error.  Then, throw the first one.\n\n\n      if (exceptions.every(isError)) {\n        throw exceptions.find(isError);\n      }\n\n      if (Recoil_gkx_1('recoil_async_selector_refactor')) {\n        // Otherwise, return a promise that will resolve when the next result is\n        // available, whichever one happens to be next.  But, if all pending\n        // dependencies end up with errors, then reject the promise.\n        return new Promise(function (resolve, reject) {\n          var _iterator25 = _createForOfIteratorHelper(exceptions.entries()),\n              _step25;\n\n          try {\n            var _loop = function _loop() {\n              var _step25$value = _slicedToArray(_step25.value, 2),\n                  i = _step25$value[0],\n                  exp = _step25$value[1];\n\n              if (Recoil_isPromise(exp)) {\n                exp.then(function (result) {\n                  results[i] = getValueFromLoadablePromiseResult(result);\n                  exceptions[i] = null;\n                  resolve(wrapLoadables(dependencies, results, exceptions));\n                }).catch(function (error) {\n                  exceptions[i] = error;\n\n                  if (exceptions.every(isError)) {\n                    reject(exceptions[0]);\n                  }\n                });\n              }\n            };\n\n            for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n              _loop();\n            }\n          } catch (err) {\n            _iterator25.e(err);\n          } finally {\n            _iterator25.f();\n          }\n        });\n      } else {\n        throw new Promise(function (resolve, reject) {\n          var _iterator26 = _createForOfIteratorHelper(exceptions.entries()),\n              _step26;\n\n          try {\n            var _loop2 = function _loop2() {\n              var _step26$value = _slicedToArray(_step26.value, 2),\n                  i = _step26$value[0],\n                  exp = _step26$value[1];\n\n              if (Recoil_isPromise(exp)) {\n                exp.then(function (result) {\n                  results[i] = result;\n                  exceptions[i] = null;\n                  resolve(wrapLoadables(dependencies, results, exceptions));\n                }).catch(function (error) {\n                  exceptions[i] = error;\n\n                  if (exceptions.every(isError)) {\n                    reject(exceptions[0]);\n                  }\n                });\n              }\n            };\n\n            for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n              _loop2();\n            }\n          } catch (err) {\n            _iterator26.e(err);\n          } finally {\n            _iterator26.f();\n          }\n        });\n      }\n    };\n  }\n}); // Selector that requests all dependencies in parallel and waits for all to be\n// available before returning a value.  It will error if any dependencies error.\n\nvar waitForAll = Recoil_selectorFamily({\n  key: '__waitForAll',\n  get: function get(dependencies) {\n    return function (_ref21) {\n      var get = _ref21.get;\n      // Issue requests for all dependencies in parallel.\n      // Exceptions can either be Promises of pending results or real errors\n      var deps = unwrapDependencies(dependencies);\n\n      var _concurrentRequests5 = concurrentRequests(get, deps),\n          _concurrentRequests6 = _slicedToArray(_concurrentRequests5, 2),\n          results = _concurrentRequests6[0],\n          exceptions = _concurrentRequests6[1]; // If all results are available, return the results\n\n\n      if (exceptions.every(function (exp) {\n        return exp == null;\n      })) {\n        return wrapResults(dependencies, results);\n      } // If we have any errors, throw the first error\n\n\n      var error = exceptions.find(isError);\n\n      if (error != null) {\n        throw error;\n      }\n\n      if (Recoil_gkx_1('recoil_async_selector_refactor')) {\n        // Otherwise, return a promise that will resolve when all results are available\n        return Promise.all(exceptions).then(function (results) {\n          return wrapResults(dependencies, results.map(getValueFromLoadablePromiseResult));\n        });\n      } else {\n        throw Promise.all(exceptions).then(function (results) {\n          return wrapResults(dependencies, results);\n        });\n      }\n    };\n  }\n});\nvar noWait = Recoil_selectorFamily({\n  key: '__noWait',\n  get: function get(dependency) {\n    return function (_ref22) {\n      var get = _ref22.get;\n\n      try {\n        return loadableWithValue$3(get(dependency));\n      } catch (exception) {\n        return Recoil_isPromise(exception) ? loadableWithPromise$3(exception) : loadableWithError$3(exception);\n      }\n    };\n  }\n});\nvar Recoil_WaitFor = {\n  waitForNone: waitForNone,\n  waitForAny: waitForAny,\n  waitForAll: waitForAll,\n  noWait: noWait\n};\nvar DefaultValue$4 = Recoil_Node.DefaultValue;\nvar RecoilRoot$2 = Recoil_RecoilRoot_react.RecoilRoot;\nvar isRecoilValue$5 = Recoil_RecoilValue$1.isRecoilValue;\nvar useGotoRecoilSnapshot$1 = Recoil_Hooks.useGotoRecoilSnapshot,\n    useRecoilCallback$1 = Recoil_Hooks.useRecoilCallback,\n    useRecoilSnapshot$1 = Recoil_Hooks.useRecoilSnapshot,\n    useRecoilState$1 = Recoil_Hooks.useRecoilState,\n    useRecoilStateLoadable$1 = Recoil_Hooks.useRecoilStateLoadable,\n    useRecoilTransactionObserver$1 = Recoil_Hooks.useRecoilTransactionObserver,\n    useRecoilValue$1 = Recoil_Hooks.useRecoilValue,\n    useRecoilValueLoadable$1 = Recoil_Hooks.useRecoilValueLoadable,\n    useResetRecoilState$1 = Recoil_Hooks.useResetRecoilState,\n    useSetRecoilState$1 = Recoil_Hooks.useSetRecoilState,\n    useSetUnvalidatedAtomValues$1 = Recoil_Hooks.useSetUnvalidatedAtomValues,\n    useTransactionObservation_DEPRECATED$1 = Recoil_Hooks.useTransactionObservation_DEPRECATED;\nvar noWait$1 = Recoil_WaitFor.noWait,\n    waitForAll$1 = Recoil_WaitFor.waitForAll,\n    waitForAny$1 = Recoil_WaitFor.waitForAny,\n    waitForNone$1 = Recoil_WaitFor.waitForNone;\nvar Recoil_index = {\n  // Types\n  DefaultValue: DefaultValue$4,\n  // Components\n  RecoilRoot: RecoilRoot$2,\n  useRecoilBridgeAcrossReactRoots_UNSTABLE: Recoil_useRecoilBridgeAcrossReactRoots,\n  // RecoilValues\n  atom: Recoil_atom,\n  selector: Recoil_selector,\n  // Convenience RecoilValues\n  atomFamily: Recoil_atomFamily,\n  selectorFamily: Recoil_selectorFamily,\n  constSelector: Recoil_constSelector,\n  errorSelector: Recoil_errorSelector,\n  readOnlySelector: Recoil_readOnlySelector,\n  // Hooks that accept RecoilValues\n  useRecoilValue: useRecoilValue$1,\n  useRecoilValueLoadable: useRecoilValueLoadable$1,\n  useRecoilState: useRecoilState$1,\n  useRecoilStateLoadable: useRecoilStateLoadable$1,\n  useSetRecoilState: useSetRecoilState$1,\n  useResetRecoilState: useResetRecoilState$1,\n  // Hooks for asynchronous Recoil\n  useRecoilCallback: useRecoilCallback$1,\n  // Hooks for Snapshots\n  useGotoRecoilSnapshot: useGotoRecoilSnapshot$1,\n  useRecoilSnapshot: useRecoilSnapshot$1,\n  useRecoilTransactionObserver_UNSTABLE: useRecoilTransactionObserver$1,\n  useTransactionObservation_UNSTABLE: useTransactionObservation_DEPRECATED$1,\n  useSetUnvalidatedAtomValues_UNSTABLE: useSetUnvalidatedAtomValues$1,\n  // Concurrency Helpers\n  noWait: noWait$1,\n  waitForNone: waitForNone$1,\n  waitForAny: waitForAny$1,\n  waitForAll: waitForAll$1,\n  // Other functions\n  isRecoilValue: isRecoilValue$5\n};\nvar Recoil_index_1 = Recoil_index.DefaultValue;\nvar Recoil_index_2 = Recoil_index.RecoilRoot;\nvar Recoil_index_3 = Recoil_index.useRecoilBridgeAcrossReactRoots_UNSTABLE;\nvar Recoil_index_4 = Recoil_index.atom;\nvar Recoil_index_5 = Recoil_index.selector;\nvar Recoil_index_6 = Recoil_index.atomFamily;\nvar Recoil_index_7 = Recoil_index.selectorFamily;\nvar Recoil_index_8 = Recoil_index.constSelector;\nvar Recoil_index_9 = Recoil_index.errorSelector;\nvar Recoil_index_10 = Recoil_index.readOnlySelector;\nvar Recoil_index_11 = Recoil_index.useRecoilValue;\nvar Recoil_index_12 = Recoil_index.useRecoilValueLoadable;\nvar Recoil_index_13 = Recoil_index.useRecoilState;\nvar Recoil_index_14 = Recoil_index.useRecoilStateLoadable;\nvar Recoil_index_15 = Recoil_index.useSetRecoilState;\nvar Recoil_index_16 = Recoil_index.useResetRecoilState;\nvar Recoil_index_17 = Recoil_index.useRecoilCallback;\nvar Recoil_index_18 = Recoil_index.useGotoRecoilSnapshot;\nvar Recoil_index_19 = Recoil_index.useRecoilSnapshot;\nvar Recoil_index_20 = Recoil_index.useRecoilTransactionObserver_UNSTABLE;\nvar Recoil_index_21 = Recoil_index.useTransactionObservation_UNSTABLE;\nvar Recoil_index_22 = Recoil_index.useSetUnvalidatedAtomValues_UNSTABLE;\nvar Recoil_index_23 = Recoil_index.noWait;\nvar Recoil_index_24 = Recoil_index.waitForNone;\nvar Recoil_index_25 = Recoil_index.waitForAny;\nvar Recoil_index_26 = Recoil_index.waitForAll;\nvar Recoil_index_27 = Recoil_index.isRecoilValue;\nexport default Recoil_index;\nexport { Recoil_index_1 as DefaultValue, Recoil_index_2 as RecoilRoot, Recoil_index_4 as atom, Recoil_index_6 as atomFamily, Recoil_index_8 as constSelector, Recoil_index_9 as errorSelector, Recoil_index_27 as isRecoilValue, Recoil_index_23 as noWait, Recoil_index_10 as readOnlySelector, Recoil_index_5 as selector, Recoil_index_7 as selectorFamily, Recoil_index_18 as useGotoRecoilSnapshot, Recoil_index_3 as useRecoilBridgeAcrossReactRoots_UNSTABLE, Recoil_index_17 as useRecoilCallback, Recoil_index_19 as useRecoilSnapshot, Recoil_index_13 as useRecoilState, Recoil_index_14 as useRecoilStateLoadable, Recoil_index_20 as useRecoilTransactionObserver_UNSTABLE, Recoil_index_11 as useRecoilValue, Recoil_index_12 as useRecoilValueLoadable, Recoil_index_16 as useResetRecoilState, Recoil_index_15 as useSetRecoilState, Recoil_index_22 as useSetUnvalidatedAtomValues_UNSTABLE, Recoil_index_21 as useTransactionObservation_UNSTABLE, Recoil_index_26 as waitForAll, Recoil_index_25 as waitForAny, Recoil_index_24 as waitForNone };"],"sourceRoot":""}